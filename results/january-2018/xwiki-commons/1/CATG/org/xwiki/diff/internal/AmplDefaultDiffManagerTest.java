package org.xwiki.diff.internal;


import LogLevel.ERROR;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import org.apache.commons.lang3.StringUtils;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.xwiki.diff.DiffManager;
import org.xwiki.diff.MergeResult;
import org.xwiki.test.mockito.MockitoComponentMockingRule;


public class AmplDefaultDiffManagerTest {
    @Rule
    public final MockitoComponentMockingRule<DiffManager> mocker = new MockitoComponentMockingRule<DiffManager>(DefaultDiffManager.class);

    private static List<Character> toCharacters(String str) {
        List<Character> characters;
        if (str != null) {
            characters = new ArrayList<Character>(str.length());
            for (char c : str.toCharArray()) {
                characters.add(c);
            }
        }else {
            characters = Collections.emptyList();
        }
        return characters;
    }

    private static String toString(List<Character> characters) {
        return StringUtils.join(characters, null);
    }

    @Test(timeout = 10000)
    public void testMergeCharList() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("b"), null);
        int o_testMergeCharList__9 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__9)));
        List<Character> o_testMergeCharList__12 = AmplDefaultDiffManagerTest.toCharacters("b");
        Assert.assertTrue(o_testMergeCharList__12.contains('b'));
        List<Character> o_testMergeCharList__13 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__13.contains('b'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("bc"), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("bc"), null);
        int o_testMergeCharList__21 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__21)));
        List<Character> o_testMergeCharList__24 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__24.contains('a'));
        Assert.assertTrue(o_testMergeCharList__24.contains('b'));
        Assert.assertTrue(o_testMergeCharList__24.contains('c'));
        List<Character> o_testMergeCharList__25 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__25.contains('a'));
        Assert.assertTrue(o_testMergeCharList__25.contains('b'));
        Assert.assertTrue(o_testMergeCharList__25.contains('c'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("ab"), null);
        int o_testMergeCharList__33 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__33)));
        List<Character> o_testMergeCharList__36 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__36.contains('a'));
        Assert.assertTrue(o_testMergeCharList__36.contains('b'));
        Assert.assertTrue(o_testMergeCharList__36.contains('c'));
        List<Character> o_testMergeCharList__37 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__37.contains('a'));
        Assert.assertTrue(o_testMergeCharList__37.contains('b'));
        Assert.assertTrue(o_testMergeCharList__37.contains('c'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("ac"), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("ac"), null);
        int o_testMergeCharList__45 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__45)));
        List<Character> o_testMergeCharList__48 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__48.contains('a'));
        Assert.assertTrue(o_testMergeCharList__48.contains('b'));
        Assert.assertTrue(o_testMergeCharList__48.contains('c'));
        List<Character> o_testMergeCharList__49 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__49.contains('a'));
        Assert.assertTrue(o_testMergeCharList__49.contains('b'));
        Assert.assertTrue(o_testMergeCharList__49.contains('c'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("bc"), null);
        int o_testMergeCharList__57 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__57)));
        List<Character> o_testMergeCharList__60 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__60.contains('a'));
        Assert.assertTrue(o_testMergeCharList__60.contains('b'));
        Assert.assertTrue(o_testMergeCharList__60.contains('c'));
        List<Character> o_testMergeCharList__61 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__61.contains('a'));
        Assert.assertTrue(o_testMergeCharList__61.contains('b'));
        Assert.assertTrue(o_testMergeCharList__61.contains('c'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("bc"), AmplDefaultDiffManagerTest.toCharacters("ab"), null);
        int o_testMergeCharList__69 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__69)));
        List<Character> o_testMergeCharList__72 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__72.contains('a'));
        Assert.assertTrue(o_testMergeCharList__72.contains('b'));
        Assert.assertTrue(o_testMergeCharList__72.contains('c'));
        List<Character> o_testMergeCharList__73 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__73.contains('a'));
        Assert.assertTrue(o_testMergeCharList__73.contains('b'));
        Assert.assertTrue(o_testMergeCharList__73.contains('c'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("aibc"), AmplDefaultDiffManagerTest.toCharacters("abcj"), null);
        int o_testMergeCharList__81 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__81)));
        List<Character> o_testMergeCharList__84 = AmplDefaultDiffManagerTest.toCharacters("aibcj");
        Assert.assertTrue(o_testMergeCharList__84.contains('a'));
        Assert.assertTrue(o_testMergeCharList__84.contains('i'));
        Assert.assertTrue(o_testMergeCharList__84.contains('b'));
        Assert.assertTrue(o_testMergeCharList__84.contains('c'));
        Assert.assertTrue(o_testMergeCharList__84.contains('j'));
        List<Character> o_testMergeCharList__85 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__85.contains('a'));
        Assert.assertTrue(o_testMergeCharList__85.contains('i'));
        Assert.assertTrue(o_testMergeCharList__85.contains('b'));
        Assert.assertTrue(o_testMergeCharList__85.contains('c'));
        Assert.assertTrue(o_testMergeCharList__85.contains('j'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("abcj"), AmplDefaultDiffManagerTest.toCharacters("aibc"), null);
        int o_testMergeCharList__92 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__92)));
        List<Character> o_testMergeCharList__95 = AmplDefaultDiffManagerTest.toCharacters("aibcj");
        Assert.assertTrue(o_testMergeCharList__95.contains('a'));
        Assert.assertTrue(o_testMergeCharList__95.contains('i'));
        Assert.assertTrue(o_testMergeCharList__95.contains('b'));
        Assert.assertTrue(o_testMergeCharList__95.contains('c'));
        Assert.assertTrue(o_testMergeCharList__95.contains('j'));
        List<Character> o_testMergeCharList__96 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__96.contains('a'));
        Assert.assertTrue(o_testMergeCharList__96.contains('i'));
        Assert.assertTrue(o_testMergeCharList__96.contains('b'));
        Assert.assertTrue(o_testMergeCharList__96.contains('c'));
        Assert.assertTrue(o_testMergeCharList__96.contains('j'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("ajbc"), AmplDefaultDiffManagerTest.toCharacters("aibc"), null);
        int o_testMergeCharList__103 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__103)));
        List<Character> o_testMergeCharList__106 = AmplDefaultDiffManagerTest.toCharacters("ajibc");
        Assert.assertTrue(o_testMergeCharList__106.contains('a'));
        Assert.assertTrue(o_testMergeCharList__106.contains('j'));
        Assert.assertTrue(o_testMergeCharList__106.contains('i'));
        Assert.assertTrue(o_testMergeCharList__106.contains('b'));
        Assert.assertTrue(o_testMergeCharList__106.contains('c'));
        List<Character> o_testMergeCharList__107 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__107.contains('a'));
        Assert.assertTrue(o_testMergeCharList__107.contains('j'));
        Assert.assertTrue(o_testMergeCharList__107.contains('i'));
        Assert.assertTrue(o_testMergeCharList__107.contains('b'));
        Assert.assertTrue(o_testMergeCharList__107.contains('c'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("aijb"), AmplDefaultDiffManagerTest.toCharacters("aib"), null);
        int o_testMergeCharList__114 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__114)));
        List<Character> o_testMergeCharList__117 = AmplDefaultDiffManagerTest.toCharacters("aijb");
        Assert.assertTrue(o_testMergeCharList__117.contains('a'));
        Assert.assertTrue(o_testMergeCharList__117.contains('i'));
        Assert.assertTrue(o_testMergeCharList__117.contains('j'));
        Assert.assertTrue(o_testMergeCharList__117.contains('b'));
        List<Character> o_testMergeCharList__118 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__118.contains('a'));
        Assert.assertTrue(o_testMergeCharList__118.contains('i'));
        Assert.assertTrue(o_testMergeCharList__118.contains('j'));
        Assert.assertTrue(o_testMergeCharList__118.contains('b'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("ajb"), AmplDefaultDiffManagerTest.toCharacters("aijb"), null);
        int o_testMergeCharList__125 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__125)));
        List<Character> o_testMergeCharList__128 = AmplDefaultDiffManagerTest.toCharacters("aijb");
        Assert.assertTrue(o_testMergeCharList__128.contains('a'));
        Assert.assertTrue(o_testMergeCharList__128.contains('i'));
        Assert.assertTrue(o_testMergeCharList__128.contains('j'));
        Assert.assertTrue(o_testMergeCharList__128.contains('b'));
        List<Character> o_testMergeCharList__129 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__129.contains('a'));
        Assert.assertTrue(o_testMergeCharList__129.contains('i'));
        Assert.assertTrue(o_testMergeCharList__129.contains('j'));
        Assert.assertTrue(o_testMergeCharList__129.contains('b'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("abc"), null);
        int o_testMergeCharList__136 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__136)));
        List<Character> o_testMergeCharList__139 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__139.contains('a'));
        Assert.assertTrue(o_testMergeCharList__139.contains('b'));
        Assert.assertTrue(o_testMergeCharList__139.contains('c'));
        List<Character> o_testMergeCharList__140 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__140.contains('a'));
        Assert.assertTrue(o_testMergeCharList__140.contains('b'));
        Assert.assertTrue(o_testMergeCharList__140.contains('c'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("ab"), null);
        int o_testMergeCharList__147 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__147)));
        List<Character> o_testMergeCharList__150 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__150.contains('a'));
        Assert.assertTrue(o_testMergeCharList__150.contains('b'));
        Assert.assertTrue(o_testMergeCharList__150.contains('c'));
        List<Character> o_testMergeCharList__151 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__151.contains('a'));
        Assert.assertTrue(o_testMergeCharList__151.contains('b'));
        Assert.assertTrue(o_testMergeCharList__151.contains('c'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("bc"), AmplDefaultDiffManagerTest.toCharacters("abc"), null);
        int o_testMergeCharList__158 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__158)));
        List<Character> o_testMergeCharList__161 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__161.contains('a'));
        Assert.assertTrue(o_testMergeCharList__161.contains('b'));
        Assert.assertTrue(o_testMergeCharList__161.contains('c'));
        List<Character> o_testMergeCharList__162 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__162.contains('a'));
        Assert.assertTrue(o_testMergeCharList__162.contains('b'));
        Assert.assertTrue(o_testMergeCharList__162.contains('c'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("bc"), null);
        int o_testMergeCharList__169 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__169)));
        List<Character> o_testMergeCharList__172 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__172.contains('a'));
        Assert.assertTrue(o_testMergeCharList__172.contains('b'));
        Assert.assertTrue(o_testMergeCharList__172.contains('c'));
        List<Character> o_testMergeCharList__173 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__173.contains('a'));
        Assert.assertTrue(o_testMergeCharList__173.contains('b'));
        Assert.assertTrue(o_testMergeCharList__173.contains('c'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("Alice Macro"), AmplDefaultDiffManagerTest.toCharacters("Alice Wiki Macro (upgraded)"), AmplDefaultDiffManagerTest.toCharacters("Alice Extension"), null);
        int o_testMergeCharList__181 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__181)));
        List<Character> o_testMergeCharList__184 = AmplDefaultDiffManagerTest.toCharacters("Alice Wiki Extension (upgraded)");
        Assert.assertTrue(o_testMergeCharList__184.contains('A'));
        Assert.assertTrue(o_testMergeCharList__184.contains('l'));
        Assert.assertTrue(o_testMergeCharList__184.contains('i'));
        Assert.assertTrue(o_testMergeCharList__184.contains('c'));
        Assert.assertTrue(o_testMergeCharList__184.contains('e'));
        Assert.assertTrue(o_testMergeCharList__184.contains(' '));
        Assert.assertTrue(o_testMergeCharList__184.contains('W'));
        Assert.assertTrue(o_testMergeCharList__184.contains('i'));
        Assert.assertTrue(o_testMergeCharList__184.contains('k'));
        Assert.assertTrue(o_testMergeCharList__184.contains('i'));
        Assert.assertTrue(o_testMergeCharList__184.contains(' '));
        Assert.assertTrue(o_testMergeCharList__184.contains('E'));
        Assert.assertTrue(o_testMergeCharList__184.contains('x'));
        Assert.assertTrue(o_testMergeCharList__184.contains('t'));
        Assert.assertTrue(o_testMergeCharList__184.contains('e'));
        Assert.assertTrue(o_testMergeCharList__184.contains('n'));
        Assert.assertTrue(o_testMergeCharList__184.contains('s'));
        Assert.assertTrue(o_testMergeCharList__184.contains('i'));
        Assert.assertTrue(o_testMergeCharList__184.contains('o'));
        Assert.assertTrue(o_testMergeCharList__184.contains('n'));
        Assert.assertTrue(o_testMergeCharList__184.contains(' '));
        Assert.assertTrue(o_testMergeCharList__184.contains('('));
        Assert.assertTrue(o_testMergeCharList__184.contains('u'));
        Assert.assertTrue(o_testMergeCharList__184.contains('p'));
        Assert.assertTrue(o_testMergeCharList__184.contains('g'));
        Assert.assertTrue(o_testMergeCharList__184.contains('r'));
        Assert.assertTrue(o_testMergeCharList__184.contains('a'));
        Assert.assertTrue(o_testMergeCharList__184.contains('d'));
        Assert.assertTrue(o_testMergeCharList__184.contains('e'));
        Assert.assertTrue(o_testMergeCharList__184.contains('d'));
        Assert.assertTrue(o_testMergeCharList__184.contains(')'));
        List<Character> o_testMergeCharList__185 = result.getMerged();
        Assert.assertTrue(o_testMergeCharList__185.contains('A'));
        Assert.assertTrue(o_testMergeCharList__185.contains('l'));
        Assert.assertTrue(o_testMergeCharList__185.contains('i'));
        Assert.assertTrue(o_testMergeCharList__185.contains('c'));
        Assert.assertTrue(o_testMergeCharList__185.contains('e'));
        Assert.assertTrue(o_testMergeCharList__185.contains(' '));
        Assert.assertTrue(o_testMergeCharList__185.contains('W'));
        Assert.assertTrue(o_testMergeCharList__185.contains('i'));
        Assert.assertTrue(o_testMergeCharList__185.contains('k'));
        Assert.assertTrue(o_testMergeCharList__185.contains('i'));
        Assert.assertTrue(o_testMergeCharList__185.contains(' '));
        Assert.assertTrue(o_testMergeCharList__185.contains('E'));
        Assert.assertTrue(o_testMergeCharList__185.contains('x'));
        Assert.assertTrue(o_testMergeCharList__185.contains('t'));
        Assert.assertTrue(o_testMergeCharList__185.contains('e'));
        Assert.assertTrue(o_testMergeCharList__185.contains('n'));
        Assert.assertTrue(o_testMergeCharList__185.contains('s'));
        Assert.assertTrue(o_testMergeCharList__185.contains('i'));
        Assert.assertTrue(o_testMergeCharList__185.contains('o'));
        Assert.assertTrue(o_testMergeCharList__185.contains('n'));
        Assert.assertTrue(o_testMergeCharList__185.contains(' '));
        Assert.assertTrue(o_testMergeCharList__185.contains('('));
        Assert.assertTrue(o_testMergeCharList__185.contains('u'));
        Assert.assertTrue(o_testMergeCharList__185.contains('p'));
        Assert.assertTrue(o_testMergeCharList__185.contains('g'));
        Assert.assertTrue(o_testMergeCharList__185.contains('r'));
        Assert.assertTrue(o_testMergeCharList__185.contains('a'));
        Assert.assertTrue(o_testMergeCharList__185.contains('d'));
        Assert.assertTrue(o_testMergeCharList__185.contains('e'));
        Assert.assertTrue(o_testMergeCharList__185.contains('d'));
        Assert.assertTrue(o_testMergeCharList__185.contains(')'));
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("$a(b)"), AmplDefaultDiffManagerTest.toCharacters("$c(d)e"), AmplDefaultDiffManagerTest.toCharacters("$c(d)e"), null);
        int o_testMergeCharList__192 = result.getLog().getLogs(ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__192)));
        String o_testMergeCharList__195 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("$c(d)e", o_testMergeCharList__195);
        Assert.assertTrue(o_testMergeCharList__24.contains('a'));
        Assert.assertTrue(o_testMergeCharList__24.contains('b'));
        Assert.assertTrue(o_testMergeCharList__24.contains('c'));
        Assert.assertTrue(o_testMergeCharList__84.contains('a'));
        Assert.assertTrue(o_testMergeCharList__84.contains('i'));
        Assert.assertTrue(o_testMergeCharList__84.contains('b'));
        Assert.assertTrue(o_testMergeCharList__84.contains('c'));
        Assert.assertTrue(o_testMergeCharList__84.contains('j'));
        Assert.assertTrue(o_testMergeCharList__37.contains('a'));
        Assert.assertTrue(o_testMergeCharList__37.contains('b'));
        Assert.assertTrue(o_testMergeCharList__37.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__57)));
        Assert.assertTrue(o_testMergeCharList__173.contains('a'));
        Assert.assertTrue(o_testMergeCharList__173.contains('b'));
        Assert.assertTrue(o_testMergeCharList__173.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__81)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__125)));
        Assert.assertTrue(o_testMergeCharList__185.contains('A'));
        Assert.assertTrue(o_testMergeCharList__185.contains('l'));
        Assert.assertTrue(o_testMergeCharList__185.contains('i'));
        Assert.assertTrue(o_testMergeCharList__185.contains('c'));
        Assert.assertTrue(o_testMergeCharList__185.contains('e'));
        Assert.assertTrue(o_testMergeCharList__185.contains(' '));
        Assert.assertTrue(o_testMergeCharList__185.contains('W'));
        Assert.assertTrue(o_testMergeCharList__185.contains('i'));
        Assert.assertTrue(o_testMergeCharList__185.contains('k'));
        Assert.assertTrue(o_testMergeCharList__185.contains('i'));
        Assert.assertTrue(o_testMergeCharList__185.contains(' '));
        Assert.assertTrue(o_testMergeCharList__185.contains('E'));
        Assert.assertTrue(o_testMergeCharList__185.contains('x'));
        Assert.assertTrue(o_testMergeCharList__185.contains('t'));
        Assert.assertTrue(o_testMergeCharList__185.contains('e'));
        Assert.assertTrue(o_testMergeCharList__185.contains('n'));
        Assert.assertTrue(o_testMergeCharList__185.contains('s'));
        Assert.assertTrue(o_testMergeCharList__185.contains('i'));
        Assert.assertTrue(o_testMergeCharList__185.contains('o'));
        Assert.assertTrue(o_testMergeCharList__185.contains('n'));
        Assert.assertTrue(o_testMergeCharList__185.contains(' '));
        Assert.assertTrue(o_testMergeCharList__185.contains('('));
        Assert.assertTrue(o_testMergeCharList__185.contains('u'));
        Assert.assertTrue(o_testMergeCharList__185.contains('p'));
        Assert.assertTrue(o_testMergeCharList__185.contains('g'));
        Assert.assertTrue(o_testMergeCharList__185.contains('r'));
        Assert.assertTrue(o_testMergeCharList__185.contains('a'));
        Assert.assertTrue(o_testMergeCharList__185.contains('d'));
        Assert.assertTrue(o_testMergeCharList__185.contains('e'));
        Assert.assertTrue(o_testMergeCharList__185.contains('d'));
        Assert.assertTrue(o_testMergeCharList__185.contains(')'));
        Assert.assertTrue(o_testMergeCharList__128.contains('a'));
        Assert.assertTrue(o_testMergeCharList__128.contains('i'));
        Assert.assertTrue(o_testMergeCharList__128.contains('j'));
        Assert.assertTrue(o_testMergeCharList__128.contains('b'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__21)));
        Assert.assertTrue(o_testMergeCharList__150.contains('a'));
        Assert.assertTrue(o_testMergeCharList__150.contains('b'));
        Assert.assertTrue(o_testMergeCharList__150.contains('c'));
        Assert.assertTrue(o_testMergeCharList__61.contains('a'));
        Assert.assertTrue(o_testMergeCharList__61.contains('b'));
        Assert.assertTrue(o_testMergeCharList__61.contains('c'));
        Assert.assertTrue(o_testMergeCharList__49.contains('a'));
        Assert.assertTrue(o_testMergeCharList__49.contains('b'));
        Assert.assertTrue(o_testMergeCharList__49.contains('c'));
        Assert.assertTrue(o_testMergeCharList__72.contains('a'));
        Assert.assertTrue(o_testMergeCharList__72.contains('b'));
        Assert.assertTrue(o_testMergeCharList__72.contains('c'));
        Assert.assertTrue(o_testMergeCharList__172.contains('a'));
        Assert.assertTrue(o_testMergeCharList__172.contains('b'));
        Assert.assertTrue(o_testMergeCharList__172.contains('c'));
        Assert.assertTrue(o_testMergeCharList__139.contains('a'));
        Assert.assertTrue(o_testMergeCharList__139.contains('b'));
        Assert.assertTrue(o_testMergeCharList__139.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__9)));
        Assert.assertTrue(o_testMergeCharList__95.contains('a'));
        Assert.assertTrue(o_testMergeCharList__95.contains('i'));
        Assert.assertTrue(o_testMergeCharList__95.contains('b'));
        Assert.assertTrue(o_testMergeCharList__95.contains('c'));
        Assert.assertTrue(o_testMergeCharList__95.contains('j'));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__103)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__147)));
        Assert.assertTrue(o_testMergeCharList__60.contains('a'));
        Assert.assertTrue(o_testMergeCharList__60.contains('b'));
        Assert.assertTrue(o_testMergeCharList__60.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__114)));
        Assert.assertTrue(o_testMergeCharList__117.contains('a'));
        Assert.assertTrue(o_testMergeCharList__117.contains('i'));
        Assert.assertTrue(o_testMergeCharList__117.contains('j'));
        Assert.assertTrue(o_testMergeCharList__117.contains('b'));
        Assert.assertTrue(o_testMergeCharList__184.contains('A'));
        Assert.assertTrue(o_testMergeCharList__184.contains('l'));
        Assert.assertTrue(o_testMergeCharList__184.contains('i'));
        Assert.assertTrue(o_testMergeCharList__184.contains('c'));
        Assert.assertTrue(o_testMergeCharList__184.contains('e'));
        Assert.assertTrue(o_testMergeCharList__184.contains(' '));
        Assert.assertTrue(o_testMergeCharList__184.contains('W'));
        Assert.assertTrue(o_testMergeCharList__184.contains('i'));
        Assert.assertTrue(o_testMergeCharList__184.contains('k'));
        Assert.assertTrue(o_testMergeCharList__184.contains('i'));
        Assert.assertTrue(o_testMergeCharList__184.contains(' '));
        Assert.assertTrue(o_testMergeCharList__184.contains('E'));
        Assert.assertTrue(o_testMergeCharList__184.contains('x'));
        Assert.assertTrue(o_testMergeCharList__184.contains('t'));
        Assert.assertTrue(o_testMergeCharList__184.contains('e'));
        Assert.assertTrue(o_testMergeCharList__184.contains('n'));
        Assert.assertTrue(o_testMergeCharList__184.contains('s'));
        Assert.assertTrue(o_testMergeCharList__184.contains('i'));
        Assert.assertTrue(o_testMergeCharList__184.contains('o'));
        Assert.assertTrue(o_testMergeCharList__184.contains('n'));
        Assert.assertTrue(o_testMergeCharList__184.contains(' '));
        Assert.assertTrue(o_testMergeCharList__184.contains('('));
        Assert.assertTrue(o_testMergeCharList__184.contains('u'));
        Assert.assertTrue(o_testMergeCharList__184.contains('p'));
        Assert.assertTrue(o_testMergeCharList__184.contains('g'));
        Assert.assertTrue(o_testMergeCharList__184.contains('r'));
        Assert.assertTrue(o_testMergeCharList__184.contains('a'));
        Assert.assertTrue(o_testMergeCharList__184.contains('d'));
        Assert.assertTrue(o_testMergeCharList__184.contains('e'));
        Assert.assertTrue(o_testMergeCharList__184.contains('d'));
        Assert.assertTrue(o_testMergeCharList__184.contains(')'));
        Assert.assertTrue(o_testMergeCharList__107.contains('a'));
        Assert.assertTrue(o_testMergeCharList__107.contains('j'));
        Assert.assertTrue(o_testMergeCharList__107.contains('i'));
        Assert.assertTrue(o_testMergeCharList__107.contains('b'));
        Assert.assertTrue(o_testMergeCharList__107.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__33)));
        Assert.assertTrue(o_testMergeCharList__25.contains('a'));
        Assert.assertTrue(o_testMergeCharList__25.contains('b'));
        Assert.assertTrue(o_testMergeCharList__25.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__181)));
        Assert.assertTrue(o_testMergeCharList__13.contains('b'));
        Assert.assertTrue(o_testMergeCharList__73.contains('a'));
        Assert.assertTrue(o_testMergeCharList__73.contains('b'));
        Assert.assertTrue(o_testMergeCharList__73.contains('c'));
        Assert.assertTrue(o_testMergeCharList__48.contains('a'));
        Assert.assertTrue(o_testMergeCharList__48.contains('b'));
        Assert.assertTrue(o_testMergeCharList__48.contains('c'));
        Assert.assertTrue(o_testMergeCharList__161.contains('a'));
        Assert.assertTrue(o_testMergeCharList__161.contains('b'));
        Assert.assertTrue(o_testMergeCharList__161.contains('c'));
        Assert.assertTrue(o_testMergeCharList__96.contains('a'));
        Assert.assertTrue(o_testMergeCharList__96.contains('i'));
        Assert.assertTrue(o_testMergeCharList__96.contains('b'));
        Assert.assertTrue(o_testMergeCharList__96.contains('c'));
        Assert.assertTrue(o_testMergeCharList__96.contains('j'));
        Assert.assertTrue(o_testMergeCharList__36.contains('a'));
        Assert.assertTrue(o_testMergeCharList__36.contains('b'));
        Assert.assertTrue(o_testMergeCharList__36.contains('c'));
        Assert.assertTrue(o_testMergeCharList__106.contains('a'));
        Assert.assertTrue(o_testMergeCharList__106.contains('j'));
        Assert.assertTrue(o_testMergeCharList__106.contains('i'));
        Assert.assertTrue(o_testMergeCharList__106.contains('b'));
        Assert.assertTrue(o_testMergeCharList__106.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__69)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__169)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__192)));
        Assert.assertTrue(o_testMergeCharList__162.contains('a'));
        Assert.assertTrue(o_testMergeCharList__162.contains('b'));
        Assert.assertTrue(o_testMergeCharList__162.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__136)));
        Assert.assertTrue(o_testMergeCharList__129.contains('a'));
        Assert.assertTrue(o_testMergeCharList__129.contains('i'));
        Assert.assertTrue(o_testMergeCharList__129.contains('j'));
        Assert.assertTrue(o_testMergeCharList__129.contains('b'));
        Assert.assertTrue(o_testMergeCharList__85.contains('a'));
        Assert.assertTrue(o_testMergeCharList__85.contains('i'));
        Assert.assertTrue(o_testMergeCharList__85.contains('b'));
        Assert.assertTrue(o_testMergeCharList__85.contains('c'));
        Assert.assertTrue(o_testMergeCharList__85.contains('j'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__45)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__92)));
        Assert.assertTrue(o_testMergeCharList__12.contains('b'));
        Assert.assertTrue(o_testMergeCharList__151.contains('a'));
        Assert.assertTrue(o_testMergeCharList__151.contains('b'));
        Assert.assertTrue(o_testMergeCharList__151.contains('c'));
        Assert.assertTrue(o_testMergeCharList__140.contains('a'));
        Assert.assertTrue(o_testMergeCharList__140.contains('b'));
        Assert.assertTrue(o_testMergeCharList__140.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__158)));
        Assert.assertTrue(o_testMergeCharList__118.contains('a'));
        Assert.assertTrue(o_testMergeCharList__118.contains('i'));
        Assert.assertTrue(o_testMergeCharList__118.contains('j'));
        Assert.assertTrue(o_testMergeCharList__118.contains('b'));
    }
}

