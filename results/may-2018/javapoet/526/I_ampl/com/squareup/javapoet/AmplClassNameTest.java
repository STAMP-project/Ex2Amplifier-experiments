package com.squareup.javapoet;


import com.google.testing.compile.CompilationRule;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;


@RunWith(JUnit4.class)
public final class AmplClassNameTest {
    static class OuterClass {
        static class InnerClass {}
    }

    @Rule
    public CompilationRule compilationRule = new CompilationRule();

    private void assertBestGuessThrows(String s) {
        try {
            ClassName.bestGuess(s);
            Assert.fail();
        } catch (IllegalArgumentException expected) {
        }
    }

    @Test(timeout = 120000)
    public void peerClass_literalMutationString10241_literalMutationString11531() throws Exception {
        ClassName o_peerClass_literalMutationString10241__1 = ClassName.get(Short.class);
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).withoutAnnotations()).isPrimitive());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).withoutAnnotations()).isAnnotated());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).unbox()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).box()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).unbox()).isBoxedPrimitive());
        Assert.assertEquals("java.lang", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).packageName());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).withoutAnnotations()).isAnnotated());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).box()).isPrimitive());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).isPrimitive());
        Assert.assertEquals(109413500, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).unbox()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).box()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).isBoxedPrimitive());
        Assert.assertEquals("short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).simpleNames().isEmpty());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertEquals("short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).unbox()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).unbox()).isBoxedPrimitive());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).isBoxedPrimitive());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).box()).isAnnotated());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).hashCode())));
        Assert.assertEquals("short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).withoutAnnotations()).toString());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertNull(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).enclosingClassName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).isAnnotated());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).hashCode())));
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).box()).hashCode())));
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).box()).toString());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).box()).toString());
        Assert.assertEquals(109413500, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).unbox()).hashCode())));
        Assert.assertEquals("Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).simpleName());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).unbox()).isPrimitive());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).toString());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).unbox()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).unbox()).isAnnotated());
        Assert.assertEquals(109413500, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).withoutAnnotations()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).box()).isPrimitive());
        Assert.assertEquals("short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).unbox()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).unbox()).isAnnotated());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).box()).isAnnotated());
        Assert.assertEquals("Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).simpleName());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).reflectionName());
        Assert.assertNull(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).enclosingClassName());
        Assert.assertTrue(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).isBoxedPrimitive());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).box()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).simpleNames().isEmpty());
        Assert.assertEquals("Short", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).simpleName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).isPrimitive());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).reflectionName());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).unbox()).isPrimitive());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).isAnnotated());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).unbox()).isPrimitive());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).toString());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).withoutAnnotations()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).unbox()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).withoutAnnotations()).isAnnotated());
        Assert.assertTrue(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).simpleNames().isEmpty());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).unbox()).isBoxedPrimitive());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).withoutAnnotations()).isPrimitive());
        Assert.assertEquals(109413500, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).unbox()).hashCode())));
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).box()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).box()).isAnnotated());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).withoutAnnotations()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).isPrimitive());
        Assert.assertEquals("java.lang", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).packageName());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).withoutAnnotations()).toString());
        Assert.assertEquals("short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).unbox()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).isPrimitive());
        Assert.assertEquals(109413500, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).unbox()).hashCode())));
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).box()).toString());
        Assert.assertTrue(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).withoutAnnotations()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).withoutAnnotations()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).isAnnotated());
        Assert.assertNull(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).enclosingClassName());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).hashCode())));
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).withoutAnnotations()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).unbox()).isAnnotated());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).withoutAnnotations()).hashCode())));
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).box()).toString());
        Assert.assertEquals("java.lang", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).packageName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).isPrimitive());
        Assert.assertEquals(109413500, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).box()).isPrimitive());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).withoutAnnotations()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).isPrimitive());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).box()).hashCode())));
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).isAnnotated());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).reflectionName());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).withoutAnnotations()).hashCode())));
        Assert.assertEquals("short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).unbox()).toString());
        ClassName o_peerClass_literalMutationString10241__2 = ClassName.get("&9&a/x.$HoI`k", "Short");
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).box()).toString());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).isPrimitive());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).toString());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).withoutAnnotations()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).simpleNames().isEmpty());
        Assert.assertEquals("&9&a/x.$HoI`k", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).packageName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).box()).isBoxedPrimitive());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).hashCode())));
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).box()).toString());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).hashCode())));
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).withoutAnnotations()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).isBoxedPrimitive());
        Assert.assertNull(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).enclosingClassName());
        Assert.assertNull(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).enclosingClassName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).simpleNames().isEmpty());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).box()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).box()).isPrimitive());
        Assert.assertEquals("Short", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).simpleName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).box()).isPrimitive());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).box()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).box()).isAnnotated());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).withoutAnnotations()).toString());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).reflectionName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).simpleNames().isEmpty());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).isAnnotated());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).reflectionName());
        Assert.assertEquals("Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).simpleName());
        Assert.assertEquals("Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).simpleName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).withoutAnnotations()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).box()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).box()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).isAnnotated());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).withoutAnnotations()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).withoutAnnotations()).isAnnotated());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).reflectionName());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).hashCode())));
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).box()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).withoutAnnotations()).isPrimitive());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).hashCode())));
        Assert.assertNull(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).enclosingClassName());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).isBoxedPrimitive());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).withoutAnnotations()).isPrimitive());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).withoutAnnotations()).hashCode())));
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).withoutAnnotations()).toString());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).withoutAnnotations()).isAnnotated());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).box()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).box()).isBoxedPrimitive());
        Assert.assertEquals("&9&a/x.$HoI`k", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).packageName());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).box()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).isPrimitive());
        Assert.assertEquals("&9&a/x.$HoI`k", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).packageName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).withoutAnnotations()).isPrimitive());
        ClassName o_peerClass_literalMutationString10241__3 = ClassName.get("a.b", "Combo", "Burrito");
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).box()).isPrimitive());
        Assert.assertEquals(1793719381, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).withoutAnnotations()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).topLevelClassName()).isAnnotated());
        Assert.assertEquals("a.b.Combo", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).reflectionName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).withoutAnnotations()).isPrimitive());
        Assert.assertEquals(1793719381, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).box()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).withoutAnnotations()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).topLevelClassName()).isPrimitive());
        Assert.assertEquals("a.b.Combo.Burrito", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).simpleNames().isEmpty());
        Assert.assertEquals("a.b.Combo.Burrito", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).toString());
        Assert.assertNull(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).topLevelClassName()).enclosingClassName());
        Assert.assertEquals("a.b.Combo.Burrito", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).box()).toString());
        Assert.assertEquals("Combo", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).topLevelClassName()).simpleName());
        Assert.assertEquals("a.b.Combo", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).isPrimitive());
        Assert.assertEquals("Combo", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).simpleName());
        Assert.assertEquals(1793719381, ((int) (((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).hashCode())));
        Assert.assertEquals("a.b.Combo", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).topLevelClassName()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).topLevelClassName()).isBoxedPrimitive());
        Assert.assertEquals("Combo", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).topLevelClassName()).simpleName());
        Assert.assertEquals(635113784, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).topLevelClassName()).isPrimitive());
        Assert.assertEquals(635113784, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).withoutAnnotations()).hashCode())));
        Assert.assertEquals("a.b.Combo", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).topLevelClassName()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).box()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertEquals("a.b", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).packageName());
        Assert.assertEquals("a.b.Combo.Burrito", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).box()).toString());
        Assert.assertEquals("a.b", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).topLevelClassName()).packageName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).topLevelClassName()).isAnnotated());
        Assert.assertEquals("a.b.Combo", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).topLevelClassName()).reflectionName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).box()).isBoxedPrimitive());
        Assert.assertNull(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).enclosingClassName());
        Assert.assertEquals("Burrito", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).simpleName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).isAnnotated());
        Assert.assertEquals("a.b.Combo", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).withoutAnnotations()).toString());
        Assert.assertEquals(1793719381, ((int) (((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).isBoxedPrimitive());
        Assert.assertEquals(635113784, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).hashCode())));
        Assert.assertEquals("a.b.Combo", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).reflectionName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).box()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertEquals("a.b.Combo.Burrito", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).withoutAnnotations()).isAnnotated());
        Assert.assertEquals(1793719381, ((int) (((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).topLevelClassName()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).simpleNames().isEmpty());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).withoutAnnotations()).isPrimitive());
        Assert.assertEquals(1793719381, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).box()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).box()).isAnnotated());
        Assert.assertEquals("a.b", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).topLevelClassName()).packageName());
        Assert.assertEquals("a.b.Combo", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).topLevelClassName()).simpleNames().isEmpty());
        Assert.assertEquals("a.b.Combo", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).topLevelClassName()).reflectionName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).topLevelClassName()).simpleNames().isEmpty());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).box()).isBoxedPrimitive());
        Assert.assertEquals("a.b.Combo", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).box()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).box()).isBoxedPrimitive());
        Assert.assertEquals("a.b.Combo$Burrito", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).reflectionName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).box()).isPrimitive());
        Assert.assertEquals("a.b", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).packageName());
        Assert.assertEquals(635113784, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).box()).hashCode())));
        Assert.assertEquals("a.b.Combo", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).box()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).box()).isBoxedPrimitive());
        Assert.assertEquals("Combo", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).simpleName());
        Assert.assertEquals(1793719381, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).withoutAnnotations()).hashCode())));
        Assert.assertNull(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).topLevelClassName()).enclosingClassName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).isAnnotated());
        Assert.assertEquals(635113784, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).box()).hashCode())));
        Assert.assertNull(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).enclosingClassName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).withoutAnnotations()).isAnnotated());
        Assert.assertEquals("a.b", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).packageName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).withoutAnnotations()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).isPrimitive());
        Assert.assertEquals("a.b.Combo.Burrito", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).withoutAnnotations()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).simpleNames().isEmpty());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).box()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).enclosingClassName()).topLevelClassName()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).box()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).box()).isPrimitive());
        Assert.assertEquals(635113784, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).withoutAnnotations()).hashCode())));
        Assert.assertEquals(635113784, ((int) (((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).hashCode())));
        Assert.assertEquals(1793719381, ((int) (((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).topLevelClassName()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).withoutAnnotations()).isPrimitive());
        Assert.assertEquals("a.b.Combo.Burrito", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).withoutAnnotations()).withoutAnnotations()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).withoutAnnotations()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).box()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).isPrimitive());
        Assert.assertEquals("a.b.Combo", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__3).topLevelClassName()).withoutAnnotations()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).box()).toString());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).isPrimitive());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).toString());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).withoutAnnotations()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).simpleNames().isEmpty());
        Assert.assertEquals("&9&a/x.$HoI`k", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).packageName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).box()).isBoxedPrimitive());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).hashCode())));
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).box()).toString());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).hashCode())));
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).withoutAnnotations()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).isBoxedPrimitive());
        Assert.assertNull(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).enclosingClassName());
        Assert.assertNull(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).enclosingClassName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).simpleNames().isEmpty());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).box()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).box()).isPrimitive());
        Assert.assertEquals("Short", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).simpleName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).box()).isPrimitive());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).box()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).box()).isAnnotated());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).withoutAnnotations()).toString());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).reflectionName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).simpleNames().isEmpty());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).isAnnotated());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).reflectionName());
        Assert.assertEquals("Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).simpleName());
        Assert.assertEquals("Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).simpleName());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).withoutAnnotations()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).box()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).box()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).isAnnotated());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).withoutAnnotations()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).withoutAnnotations()).isAnnotated());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).reflectionName());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).hashCode())));
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).box()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).withoutAnnotations()).isPrimitive());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).hashCode())));
        Assert.assertNull(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).enclosingClassName());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).isBoxedPrimitive());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).withoutAnnotations()).isPrimitive());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).withoutAnnotations()).hashCode())));
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).withoutAnnotations()).toString());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).withoutAnnotations()).isAnnotated());
        Assert.assertEquals(-2069732114, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).box()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).withoutAnnotations()).box()).isBoxedPrimitive());
        Assert.assertEquals("&9&a/x.$HoI`k", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).packageName());
        Assert.assertEquals("&9&a/x.$HoI`k.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).box()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).isPrimitive());
        Assert.assertEquals("&9&a/x.$HoI`k", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).topLevelClassName()).packageName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).topLevelClassName()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__2).box()).withoutAnnotations()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).withoutAnnotations()).isPrimitive());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).withoutAnnotations()).isAnnotated());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).unbox()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).box()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).unbox()).isBoxedPrimitive());
        Assert.assertEquals("java.lang", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).packageName());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).withoutAnnotations()).isAnnotated());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).box()).isPrimitive());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).isPrimitive());
        Assert.assertEquals(109413500, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).unbox()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).box()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).isBoxedPrimitive());
        Assert.assertEquals("short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).simpleNames().isEmpty());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertEquals("short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).unbox()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).unbox()).isBoxedPrimitive());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).isBoxedPrimitive());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).box()).isAnnotated());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).hashCode())));
        Assert.assertEquals("short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).withoutAnnotations()).toString());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertNull(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).enclosingClassName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).isAnnotated());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).hashCode())));
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).box()).hashCode())));
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).box()).toString());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).box()).toString());
        Assert.assertEquals(109413500, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).unbox()).hashCode())));
        Assert.assertEquals("Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).simpleName());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).unbox()).isPrimitive());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).toString());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).unbox()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).unbox()).isAnnotated());
        Assert.assertEquals(109413500, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).withoutAnnotations()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).box()).isPrimitive());
        Assert.assertEquals("short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).unbox()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).unbox()).isAnnotated());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).box()).isAnnotated());
        Assert.assertEquals("Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).simpleName());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).reflectionName());
        Assert.assertNull(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).enclosingClassName());
        Assert.assertTrue(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).isBoxedPrimitive());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).box()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).simpleNames().isEmpty());
        Assert.assertEquals("Short", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).simpleName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).isPrimitive());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).reflectionName());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).unbox()).isPrimitive());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).isAnnotated());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).unbox()).isPrimitive());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).toString());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).withoutAnnotations()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).unbox()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).withoutAnnotations()).isAnnotated());
        Assert.assertTrue(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).simpleNames().isEmpty());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).unbox()).isBoxedPrimitive());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).withoutAnnotations()).isPrimitive());
        Assert.assertEquals(109413500, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).unbox()).hashCode())));
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).box()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).box()).isAnnotated());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).withoutAnnotations()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).isPrimitive());
        Assert.assertEquals("java.lang", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).packageName());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).withoutAnnotations()).toString());
        Assert.assertEquals("short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).unbox()).toString());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).isPrimitive());
        Assert.assertEquals(109413500, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).unbox()).hashCode())));
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).box()).toString());
        Assert.assertTrue(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).withoutAnnotations()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).isAnnotated());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).withoutAnnotations()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).isAnnotated());
        Assert.assertNull(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).enclosingClassName());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).hashCode())));
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).withoutAnnotations()).toString());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).unbox()).isAnnotated());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).withoutAnnotations()).hashCode())));
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).withoutAnnotations()).isBoxedPrimitive());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).box()).toString());
        Assert.assertEquals("java.lang", ((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).topLevelClassName()).packageName());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).isPrimitive());
        Assert.assertEquals(109413500, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).unbox()).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).box()).isPrimitive());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).hashCode())));
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).withoutAnnotations()).isPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).isPrimitive());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).box()).hashCode())));
        Assert.assertTrue(((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).box()).isBoxedPrimitive());
        Assert.assertFalse(((com.squareup.javapoet.ClassName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).topLevelClassName()).isAnnotated());
        Assert.assertEquals("java.lang.Short", ((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).reflectionName());
        Assert.assertEquals(-515992664, ((int) (((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).box()).withoutAnnotations()).hashCode())));
        Assert.assertEquals("short", ((com.squareup.javapoet.TypeName)((com.squareup.javapoet.TypeName)((com.squareup.javapoet.ClassName)o_peerClass_literalMutationString10241__1).withoutAnnotations()).unbox()).toString());
    }
}

