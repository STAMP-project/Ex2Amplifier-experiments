@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE115() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE116() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE117() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE118() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE119() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE120() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE121() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE122() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE123() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE124() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE125() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE126() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE127() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE128() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE129() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 0, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}
@org.junit.Test(timeout = 120000)
public void wrapMultipleNewlines_Ex2_JBSE130() throws java.lang.Exception {
    java.lang.StringBuffer out = new java.lang.StringBuffer();
    com.squareup.javapoet.LineWrapper lineWrapper = new com.squareup.javapoet.LineWrapper(out, 10, 10);
    lineWrapper.append("abcde");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("fghi\nklmnopq\nrs");
    lineWrapper.wrappingSpace(2);
    lineWrapper.append("tuvwxyz1");
    lineWrapper.close();
    com.google.common.truth.Truth.assertThat(out.toString()).isEqualTo("abcde fghi\nklmnopq\nrs\n    tuvwxyz1");
}