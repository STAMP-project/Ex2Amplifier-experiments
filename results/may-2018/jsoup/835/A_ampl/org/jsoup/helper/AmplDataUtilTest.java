package org.jsoup.helper;


import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import org.jsoup.nodes.Document;
import org.jsoup.parser.Parser;
import org.junit.Assert;
import org.junit.Test;


public class AmplDataUtilTest {
    @Test(timeout = 120000)
    public void discardsSpuriousByteOrderMark() throws Exception {
        String html = "\ufeff<html><head><title>One</title></head><body>Two</body></html>";
        Assert.assertEquals("\ufeff<html><head><title>One</title></head><body>Two</body></html>", html);
        ByteBuffer buffer = Charset.forName("UTF-8").encode(html);
        Document doc = DataUtil.parseByteData(buffer, "UTF-8", "http://foo.com/", Parser.htmlParser());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).childNodesCopy().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).classNames().isEmpty());
        Assert.assertEquals("<head></head>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).outerHtml());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).location());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).toString());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).asList().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tagName());
        Assert.assertEquals("<head></head>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).toString());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).parents().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).toString());
        Assert.assertEquals("\ufffd", ((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).replacement());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).getAllElements().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).nextElementSibling());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).hasText());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).html());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).siblingIndex())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).childNodeSize())));
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).ownText());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).nextSibling());
        Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).nodeName());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).className());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).siblingNodes().isEmpty());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).html());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).cssSelector());
        Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).hashCode())));
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).data());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).nextElementSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).previousElementSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).nextElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).asList().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).cssSelector());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).hasText());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).dataset().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).nextElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).ownText());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).data());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isSelfClosing());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isData());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).childNodesCopy().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).childNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).toString());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).isBlock());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).data());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).baseUri());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).nextElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).data());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).dataset().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).nodeName());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).parentNode());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).hashCode())));
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).val());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).nodeName());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).nextSibling());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).previousSibling());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).elementSiblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).childNodes().isEmpty());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).html());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).dataNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).siblingNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).val());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).elementSiblingIndex())));
        Assert.assertEquals("html > body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).cssSelector());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).baseUri());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).nextSibling());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).nextSibling());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).parents().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).nextSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).childNodes().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)doc).nodeName());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).childNodeSize())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).siblingIndex())));
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).parentNode());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).parent());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).text());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).cssSelector());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).toString());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).childNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).getAllElements().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).elementSiblingIndex())));
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).previousElementSibling());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)doc).tagName());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).parent());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isInline());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).previousSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).parent());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).toString());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).isBlock());
        Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).hashCode())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).siblingIndex())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).hashCode())));
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isFormSubmittable());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).siblingElements().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).siblingNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).isBlock());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).toString());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).title());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).nodeName());
        Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).hashCode())));
        Assert.assertFalse(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).outline());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).isBlock());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).canContainBlock());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).cssSelector());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).childNodeSize())));
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isData());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).getAllElements().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).siblingNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).isBlock());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).location());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).previousElementSibling());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).baseUri());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).parent());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).childNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).lastElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).siblingNodes().isEmpty());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).location());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).isBlock());
        Assert.assertEquals("noQuirks", ((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)doc).quirksMode()).name());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).previousSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).className());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).nodeName());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).getName());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).nextSibling());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).nodeName());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).textNodes().isEmpty());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).childNodeSize())));
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).parent());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).text());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).name());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).data());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).childNodes().isEmpty());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).baseUri());
        Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).nodeName());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).parents().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).dataset().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).children().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).parents().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).hasText());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).childNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).head());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).children().isEmpty());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).displayName());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).isRegistered());
        Assert.assertNull(((org.jsoup.nodes.Document)doc).nextElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).classNames().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).previousSibling());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).baseUri());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).siblingNodes().isEmpty());
        Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).nodeName());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).updateMetaCharsetElement());
        Assert.assertNull(((org.jsoup.nodes.Document)doc).previousSibling());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).cssSelector());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).className());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).ownText());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).previousSibling());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).elementSiblingIndex())));
        Assert.assertEquals("html > body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).cssSelector());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).classNames().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).html());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).data());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).hasText());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).cssSelector());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).val());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).parents().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).childNodeSize())));
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).childNodes().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).siblingIndex())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).updateMetaCharsetElement());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).title());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).previousSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).id());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).siblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).parents().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).ownText());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).parentNode());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isFormListed());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).getAllElements().isEmpty());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).formatAsBlock());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).siblingElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).html());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).hashCode())));
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).childNodeSize())));
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).cssSelector());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).siblingNodes().isEmpty());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).name());
        Assert.assertTrue(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).prettyPrint());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).text());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).parents().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).children().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).childNodesCopy().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).data());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).tagName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).outerHtml());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).siblingElements().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).preserveWhitespace());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).childNodesCopy().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).canContainBlock());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).dataset().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).textNodes().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).nodeName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).title());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).id());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).hasText());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).toString());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).baseUri());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).childNodesCopy().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).siblingElements().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tagName());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).updateMetaCharsetElement());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).title());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).nodeName());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).nodeName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).ownText());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).firstElementSibling());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isFormSubmittable());
        Assert.assertEquals("html > head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).cssSelector());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).toString());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isInline());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).dataset().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).toString());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).formatAsBlock());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).dataNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).hasText());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).dataset().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isFormListed());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).formatAsBlock());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).text());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).toString());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).dataNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).siblingElements().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).siblingElements().isEmpty());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).toString());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).elementSiblingIndex())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).isBlock());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isInline());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).dataset().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).data());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).siblingIndex())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).elementSiblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).siblingNodes().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).quirksMode()).ordinal())));
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).childNodesCopy().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).lastElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).dataset().isEmpty());
        Assert.assertEquals("html > head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).cssSelector());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).nodeName());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isEmpty());
        Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).hashCode())));
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).baseUri());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).childNodesCopy().isEmpty());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).aliases().contains("unicode-1-1-utf-8"));
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).aliases().contains("UTF8"));
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).data());
        Assert.assertNull(((org.jsoup.nodes.Document)doc).nextSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).parentNode());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).previousElementSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).parent());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).parents().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).nodeName());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).asList().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).className());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).dataNodes().isEmpty());
        Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tagName());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).previousSibling());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).nextElementSibling());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).baseUri());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).outerHtml());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).tagName());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).siblingElements().isEmpty());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).location());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).data());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outputSettings()).indentAmount())));
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).siblingElements().isEmpty());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).canEncode());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).canContainBlock());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).html());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isKnownTag());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).siblingElements().isEmpty());
        Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).hashCode())));
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).parent());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).elementSiblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).children().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).className());
        Assert.assertNull(((org.jsoup.nodes.Document)doc).previousElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).id());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).childNodesCopy().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).nodeName());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).preserveWhitespace());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).cssSelector());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).childNodeSize())));
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).nextSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).previousElementSibling());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).baseUri());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).text());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).baseUri());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).childNodeSize())));
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).getName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).data());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).dataset().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).getAllElements().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).siblingIndex())));
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).location());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).html());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).toString());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).siblingIndex())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).updateMetaCharsetElement());
        Assert.assertEquals("<html></html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).toString());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).previousSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).isBlock());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).parentNode());
        Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).tagName());
        Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).tagName());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).classNames().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).text());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).textNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isData());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).parentNode());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).preserveWhitespace());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).body());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).nextElementSibling());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).siblingIndex())));
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isInline());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).tagName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).text());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).previousElementSibling());
        byte[] array_156591366 = new byte[]{63};
        	byte[] array_825130495 = (byte[])((java.nio.charset.CharsetEncoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newEncoder()).replacement();
        	for(int ii = 0; ii <array_156591366.length; ii++) {
        		org.junit.Assert.assertEquals(array_156591366[ii], array_825130495[ii]);
        	};
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).title());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).classNames().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).textNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).childNodes().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).cssSelector());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).parent());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).getAllElements().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).childNodeSize())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).size())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).isBlock());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).formatAsBlock());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).hasText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).siblingIndex())));
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).formatAsBlock());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).childNodesCopy().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).nextElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).toString());
        Assert.assertEquals("<html>\n <head>\n  <title>One</title>\n </head>\n <body>\n  Two\n </body>\n</html>", ((org.jsoup.nodes.Document)doc).outerHtml());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).unwrap());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isSelfClosing());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).nextSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).previousSibling());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).name());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).childNodesCopy().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).val());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).nextSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).siblingElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).val());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).ownText());
        Assert.assertEquals("<body></body>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).toString());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).toString());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isKnownTag());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).dataNodes().isEmpty());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).displayName());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).nextElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).text());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).className());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).displayName());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).id());
        Assert.assertTrue(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outputSettings()).prettyPrint());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).baseUri());
        Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).tagName());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).getName());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).parentNode());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).textNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).ownText());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).baseUri());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).dataset().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).dataNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).childNodesCopy().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).children().isEmpty());
        Assert.assertEquals(1.0F, ((float) (((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).averageCharsPerByte())), 0.1);
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).className());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).children().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).previousSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).html());
        Assert.assertEquals("<html></html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).toString());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).parent());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).aliases().contains("unicode-1-1-utf-8"));
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).aliases().contains("UTF8"));
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).childNodesCopy().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).textNodes().isEmpty());
        Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).hashCode())));
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).val());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).size())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).children().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).previousElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).id());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).outerHtml());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).id());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).tagName());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).childNodeSize())));
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).children().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).classNames().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).getAllElements().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).childNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).nextSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).dataset().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).previousElementSibling());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).cssSelector());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).siblingElements().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).classNames().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).parentNode());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).text());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).nextElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).dataset().isEmpty());
        Assert.assertEquals("noQuirks", ((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).quirksMode()).name());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).tagName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).className());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).className());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).childNodeSize())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).elementSiblingIndex())));
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).className());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).nextElementSibling());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)doc).location());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).unwrap());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).elementSiblingIndex())));
        Assert.assertEquals("html", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).cssSelector());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).hasText());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).outerHtml());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).data());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).toString());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).toString());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).previousElementSibling());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).tagName());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).classNames().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).siblingNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).data());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).html());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).textNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isSelfClosing());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)doc).elementSiblingIndex())));
        Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).nodeName());
        Assert.assertEquals(1.1F, ((float) (((java.nio.charset.CharsetEncoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newEncoder()).averageBytesPerChar())), 0.1);
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).classNames().isEmpty());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).siblingIndex())));
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).toString());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).dataNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).parents().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).previousSibling());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).tagName());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).isBlock());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).parents().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).outerHtml());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).text());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).head());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).siblingNodes().isEmpty());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).canEncode());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).data());
        Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).nodeName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).text());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).classNames().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).updateMetaCharsetElement());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).previousSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).parent());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isKnownTag());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).val());
        Assert.assertEquals("head", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).getName());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).childNodes().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).size())));
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).previousSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).dataNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).previousElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).classNames().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).childNodesCopy().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).parentNode());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).previousSibling());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).nodeName());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).text());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).siblingNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isFormSubmittable());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).dataset().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).val());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).val());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outputSettings()).indentAmount())));
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).className());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).cssSelector());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outputSettings()).prettyPrint());
        Assert.assertFalse(((org.jsoup.nodes.Document)doc).getAllElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).ownText());
        Assert.assertEquals("noQuirks", ((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).quirksMode()).name());
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).classNames().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).id());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).baseUri());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).hasText());
        Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).hashCode())));
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).previousElementSibling());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).toString());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).className());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).isBlock());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).parent());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isBlock());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).parents().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).elementSiblingIndex())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).childNodeSize())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).childNodeSize())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).hasText());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).isBlock());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).dataset().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).outerHtml());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).baseUri());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).title());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).nodeName());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).className());
        Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).tagName());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).childNodesCopy().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).childNodeSize())));
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).children().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).siblingNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).children().isEmpty());
        Assert.assertEquals("html > body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).cssSelector());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).parents().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).text());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).parent());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).children().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).html());
        Assert.assertEquals("<html>\n <head>\n  <title>One</title>\n </head>\n <body>\n  Two\n </body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outerHtml());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).nextSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).text());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).siblingIndex())));
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).hasText());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).previousElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).title());
        Assert.assertEquals("html", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).tagName());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isInline());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).dataset().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).toString());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).siblingElements().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).previousSibling());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isFormSubmittable());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).dataset().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).hasText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).siblingIndex())));
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).html());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).aliases().contains("unicode-1-1-utf-8"));
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).aliases().contains("UTF8"));
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).isBlock());
        Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).tagName());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).previousElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).childNodesCopy().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).nextSibling());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).canContainBlock());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).nextElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).dataNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).dataNodes().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).nodeName());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).isBlock());
        Assert.assertFalse(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outputSettings()).outline());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).className());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).val());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).dataNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).nextSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).html());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).childNodesCopy().isEmpty());
        Assert.assertEquals(-143577441, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).hashCode())));
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).nextElementSibling());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).aliases().contains("unicode-1-1-utf-8"));
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).aliases().contains("UTF8"));
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).dataset().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).previousSibling());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isData());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).dataset().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).parentNode());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).data());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).nextElementSibling());
        Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).hashCode())));
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).parents().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).isBlock());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).asList().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).parentNode());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).indentAmount())));
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).id());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).data());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).hashCode())));
        Assert.assertEquals("head", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).toString());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).previousSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).siblingElements().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).getAllElements().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).classNames().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).html());
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).children().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).id());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isKnownTag());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).dataNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).updateMetaCharsetElement());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).location());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).html());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).textNodes().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).nodeName());
        Assert.assertEquals(3.0F, ((float) (((java.nio.charset.CharsetEncoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newEncoder()).maxBytesPerChar())), 0.1);
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).parent());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).html());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).className());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).preserveWhitespace());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outerHtml());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).dataset().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).textNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outputSettings()).outline());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).siblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).dataset().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).siblingElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).val());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).childNodesCopy().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).title());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).getName());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).siblingIndex())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).siblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).dataset().isEmpty());
        Assert.assertFalse(((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).isAutoDetecting());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isBlock());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownText());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).val());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).hasText());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).val());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).parents().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).hasText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).childNodeSize())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)doc).siblingIndex())));
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).text());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isSelfClosing());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).size())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).getAllElements().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).previousElementSibling());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).parentNode());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).classNames().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).isBlock());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).location());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).toString());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)doc).quirksMode()).ordinal())));
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).textNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).nextSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).dataNodes().isEmpty());
        Assert.assertEquals("html", ((org.jsoup.nodes.Document.OutputSettings.Syntax)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).syntax()).name());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).getAllElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).val());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).textNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).nextElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).ownText());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).dataNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).ownText());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).dataset().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).parent());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).siblingNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).classNames().isEmpty());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).outerHtml());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).classNames().isEmpty());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).isRegistered());
        Assert.assertEquals(1.0F, ((float) (((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).maxCharsPerByte())), 0.1);
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).isBlock());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.OutputSettings.Syntax)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).syntax()).ordinal())));
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).toString());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).outerHtml());
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).siblingElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).outerHtml());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).parentNode());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).parentNode());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).lastElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).siblingElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).ownText());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).html());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).nextSibling());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).parentNode());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).ownText());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).location());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).siblingElements().isEmpty());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).baseUri());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).isRegistered());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).tagName());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).nodeName());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).toString());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).getAllElements().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isSelfClosing());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).classNames().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).textNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).siblingNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).isBlock());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).dataset().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isBlock());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).toString());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).ownText());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).text());
        Assert.assertEquals("html > head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).cssSelector());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).siblingIndex())));
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).name());
        Assert.assertFalse(((org.jsoup.nodes.Document)doc).isBlock());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isBlock());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isFormListed());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).parentNode());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).id());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).toString());
        Assert.assertEquals("<body></body>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).outerHtml());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).cssSelector());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).size())));
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).outerHtml());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).toString());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).baseUri());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).data());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownText());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).isRegistered());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).tagName());
        Assert.assertFalse(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).childNodesCopy().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).childNodeSize())));
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).firstElementSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)doc).parent());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).childNodesCopy().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tagName());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).parent());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).getAllElements().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).elementSiblingIndex())));
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isKnownTag());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).html());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).previousSibling());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).elementSiblingIndex())));
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).siblingElements().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).dataset().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).siblingNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).children().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)doc).cssSelector());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).elementSiblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).siblingNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).updateMetaCharsetElement());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).val());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).id());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).dataset().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).id());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).parent());
        Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).nodeName());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).childNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).children().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).hasText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).quirksMode()).ordinal())));
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).className());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).siblingNodes().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).elementSiblingIndex())));
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).previousElementSibling());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isBlock());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).getAllElements().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).nextElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).data());
        Assert.assertEquals("html", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).nodeName());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).canContainBlock());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).nextSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).ownText());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).canEncode());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).text());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).dataNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).id());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).toString());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).siblingNodes().isEmpty());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).displayName());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).firstElementSibling());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isFormListed());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).html());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)doc).baseUri());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).siblingNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).getAllElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).outerHtml());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).text());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Entities.EscapeMode)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).escapeMode()).ordinal())));
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).toString());
        Assert.assertFalse(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).dataNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).className());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isFormSubmittable());
        Assert.assertFalse(((org.jsoup.nodes.Document)doc).updateMetaCharsetElement());
        Assert.assertEquals("<html></html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).toString());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).id());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).elementSiblingIndex())));
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).childNodeSize())));
        Assert.assertNull(((org.jsoup.nodes.Document)doc).parentNode());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).childNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).hasText());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).html());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).baseUri());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).elementSiblingIndex())));
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).html());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).isBlock());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).title());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).updateMetaCharsetElement());
        Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).nodeName());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).preserveWhitespace());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).ownText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)doc).childNodeSize())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).children().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).siblingElements().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).hashCode())));
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).dataNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).outerHtml());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).siblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).dataNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).parent());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).outerHtml());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).nextSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).dataNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isFormListed());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).asList().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).classNames().isEmpty());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).baseUri());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).nextElementSibling());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).childNodeSize())));
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).toString());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).canEncode());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).dataNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).nextSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).siblingNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).hasText());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).getAllElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).outerHtml());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).parentNode());
        Assert.assertEquals("base", ((org.jsoup.nodes.Entities.EscapeMode)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).escapeMode()).name());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).childNodesCopy().isEmpty());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).baseUri());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).className());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).id());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).siblingIndex())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).getAllElements().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isData());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).siblingElements().isEmpty());
        Assert.assertEquals("<html>\n <head>\n  <title>One</title>\n </head>\n <body>\n  Two\n </body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).outerHtml());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).getAllElements().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).parents().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)doc).hasText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).elementSiblingIndex())));
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).childNodeSize())));
        doc.head().text();
    }

    @Test(timeout = 120000)
    public void discardsSpuriousByteOrderMarkWhenNoCharsetSet() throws Exception {
        String html = "\ufeff<html><head><title>One</title></head><body>Two</body></html>";
        Assert.assertEquals("\ufeff<html><head><title>One</title></head><body>Two</body></html>", html);
        ByteBuffer buffer = Charset.forName("UTF-8").encode(html);
        Document doc = DataUtil.parseByteData(buffer, null, "http://foo.com/", Parser.htmlParser());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).childNodesCopy().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).classNames().isEmpty());
        Assert.assertEquals("<head></head>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).outerHtml());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).location());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).toString());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).asList().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tagName());
        Assert.assertEquals("<head></head>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).toString());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).parents().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).toString());
        Assert.assertEquals("\ufffd", ((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).replacement());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).getAllElements().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).nextElementSibling());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).hasText());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).html());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).siblingIndex())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).childNodeSize())));
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).ownText());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).nextSibling());
        Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).nodeName());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).className());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).siblingNodes().isEmpty());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).html());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).cssSelector());
        Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).hashCode())));
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).data());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).nextElementSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).previousElementSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).nextElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).asList().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).cssSelector());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).hasText());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).dataset().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).nextElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).ownText());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).data());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isSelfClosing());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isData());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).childNodesCopy().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).childNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).toString());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).isBlock());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).data());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).baseUri());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).nextElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).data());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).dataset().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).nodeName());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).parentNode());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).hashCode())));
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).val());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).nodeName());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).nextSibling());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).previousSibling());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).elementSiblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).childNodes().isEmpty());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).html());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).dataNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).siblingNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).val());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).elementSiblingIndex())));
        Assert.assertEquals("html > body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).cssSelector());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).baseUri());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).nextSibling());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).nextSibling());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).parents().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).nextSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).childNodes().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)doc).nodeName());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).childNodeSize())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).siblingIndex())));
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).parentNode());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).parent());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).text());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).cssSelector());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).toString());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).childNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).getAllElements().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).elementSiblingIndex())));
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).previousElementSibling());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)doc).tagName());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).parent());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isInline());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).previousSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).parent());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).toString());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).isBlock());
        Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).hashCode())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).siblingIndex())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).hashCode())));
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isFormSubmittable());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).siblingElements().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).siblingNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).isBlock());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).toString());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).title());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).nodeName());
        Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).hashCode())));
        Assert.assertFalse(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).outline());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).isBlock());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).canContainBlock());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).cssSelector());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).childNodeSize())));
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isData());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).getAllElements().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).siblingNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).isBlock());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).location());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).previousElementSibling());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).baseUri());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).parent());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).childNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).lastElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).siblingNodes().isEmpty());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).location());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).isBlock());
        Assert.assertEquals("noQuirks", ((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)doc).quirksMode()).name());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).previousSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).className());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).nodeName());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).getName());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).nextSibling());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).nodeName());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).textNodes().isEmpty());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).childNodeSize())));
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).parent());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).text());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).name());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).data());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).childNodes().isEmpty());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).baseUri());
        Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).nodeName());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).parents().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).dataset().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).children().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).parents().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).hasText());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).childNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).head());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).children().isEmpty());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).displayName());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).isRegistered());
        Assert.assertNull(((org.jsoup.nodes.Document)doc).nextElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).classNames().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).previousSibling());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).baseUri());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).siblingNodes().isEmpty());
        Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).nodeName());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).updateMetaCharsetElement());
        Assert.assertNull(((org.jsoup.nodes.Document)doc).previousSibling());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).cssSelector());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).className());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).ownText());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).previousSibling());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).elementSiblingIndex())));
        Assert.assertEquals("html > body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).cssSelector());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).classNames().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).html());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).data());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).hasText());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).cssSelector());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).val());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).parents().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).childNodeSize())));
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).childNodes().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).siblingIndex())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).updateMetaCharsetElement());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).title());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).previousSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).id());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).siblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).parents().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).ownText());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).parentNode());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isFormListed());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).getAllElements().isEmpty());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).formatAsBlock());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).siblingElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).html());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).hashCode())));
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).childNodeSize())));
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).cssSelector());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).siblingNodes().isEmpty());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).name());
        Assert.assertTrue(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).prettyPrint());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).text());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).parents().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).children().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).childNodesCopy().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).data());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).tagName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).outerHtml());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).siblingElements().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).preserveWhitespace());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).childNodesCopy().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).canContainBlock());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).dataset().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).textNodes().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).nodeName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).title());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).id());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).hasText());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).toString());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).baseUri());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).childNodesCopy().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).siblingElements().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tagName());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).updateMetaCharsetElement());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).title());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).nodeName());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).nodeName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).ownText());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).firstElementSibling());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isFormSubmittable());
        Assert.assertEquals("html > head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).cssSelector());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).toString());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isInline());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).dataset().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).toString());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).formatAsBlock());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).dataNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).hasText());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).dataset().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isFormListed());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).formatAsBlock());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).text());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).toString());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).dataNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).siblingElements().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).siblingElements().isEmpty());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).toString());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).elementSiblingIndex())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).isBlock());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isInline());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).dataset().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).data());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).siblingIndex())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).elementSiblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).siblingNodes().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).quirksMode()).ordinal())));
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).childNodesCopy().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).lastElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).dataset().isEmpty());
        Assert.assertEquals("html > head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).cssSelector());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).nodeName());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isEmpty());
        Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).hashCode())));
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).baseUri());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).childNodesCopy().isEmpty());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).aliases().contains("unicode-1-1-utf-8"));
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).aliases().contains("UTF8"));
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).data());
        Assert.assertNull(((org.jsoup.nodes.Document)doc).nextSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).parentNode());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).previousElementSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).parent());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).parents().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).nodeName());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).asList().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).className());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).dataNodes().isEmpty());
        Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tagName());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).previousSibling());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).nextElementSibling());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).baseUri());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).outerHtml());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).tagName());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).siblingElements().isEmpty());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).location());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).data());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outputSettings()).indentAmount())));
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).siblingElements().isEmpty());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).canEncode());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).canContainBlock());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).html());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isKnownTag());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).siblingElements().isEmpty());
        Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).hashCode())));
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).parent());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).elementSiblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).children().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).className());
        Assert.assertNull(((org.jsoup.nodes.Document)doc).previousElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).id());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).childNodesCopy().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).nodeName());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).preserveWhitespace());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).cssSelector());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).childNodeSize())));
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).nextSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).previousElementSibling());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).baseUri());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).text());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).baseUri());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).childNodeSize())));
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).getName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).data());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).dataset().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).getAllElements().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).siblingIndex())));
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).location());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).html());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).toString());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).siblingIndex())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).updateMetaCharsetElement());
        Assert.assertEquals("<html></html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).toString());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).previousSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).isBlock());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).parentNode());
        Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).tagName());
        Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).tagName());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).classNames().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).text());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).textNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isData());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).parentNode());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).preserveWhitespace());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).body());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).nextElementSibling());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).siblingIndex())));
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isInline());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).tagName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).text());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).previousElementSibling());
        byte[] array_1150482841 = new byte[]{63};
        	byte[] array_1434614297 = (byte[])((java.nio.charset.CharsetEncoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newEncoder()).replacement();
        	for(int ii = 0; ii <array_1150482841.length; ii++) {
        		org.junit.Assert.assertEquals(array_1150482841[ii], array_1434614297[ii]);
        	};
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).title());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).classNames().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).textNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).childNodes().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).cssSelector());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).parent());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).getAllElements().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).childNodeSize())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).size())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).isBlock());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).formatAsBlock());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).hasText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).siblingIndex())));
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).formatAsBlock());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).childNodesCopy().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).nextElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).toString());
        Assert.assertEquals("<html>\n <head>\n  <title>One</title>\n </head>\n <body>\n  Two\n </body>\n</html>", ((org.jsoup.nodes.Document)doc).outerHtml());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).unwrap());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isSelfClosing());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).nextSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).previousSibling());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).name());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).childNodesCopy().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).val());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).nextSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).siblingElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).val());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).ownText());
        Assert.assertEquals("<body></body>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).toString());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).toString());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isKnownTag());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).dataNodes().isEmpty());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).displayName());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).nextElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).text());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).className());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).displayName());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).id());
        Assert.assertTrue(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outputSettings()).prettyPrint());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).baseUri());
        Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).tagName());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).getName());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).parentNode());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).textNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).ownText());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).baseUri());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).dataset().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).dataNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).childNodesCopy().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).children().isEmpty());
        Assert.assertEquals(1.0F, ((float) (((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).averageCharsPerByte())), 0.1);
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).className());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).children().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).previousSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).html());
        Assert.assertEquals("<html></html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).toString());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).parent());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).aliases().contains("unicode-1-1-utf-8"));
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).aliases().contains("UTF8"));
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).childNodesCopy().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).textNodes().isEmpty());
        Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).hashCode())));
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).val());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).size())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).children().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).previousElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).id());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).outerHtml());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).id());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).tagName());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).childNodeSize())));
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).children().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).classNames().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).getAllElements().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).childNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).nextSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).dataset().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).previousElementSibling());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).cssSelector());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).siblingElements().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).classNames().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).parentNode());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).text());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).nextElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).dataset().isEmpty());
        Assert.assertEquals("noQuirks", ((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).quirksMode()).name());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).tagName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).className());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).className());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).childNodeSize())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).elementSiblingIndex())));
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).className());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).nextElementSibling());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)doc).location());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).unwrap());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).elementSiblingIndex())));
        Assert.assertEquals("html", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).cssSelector());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).hasText());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).outerHtml());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).data());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).toString());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).toString());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).previousElementSibling());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).tagName());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).classNames().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).siblingNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).data());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).html());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).textNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isSelfClosing());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)doc).elementSiblingIndex())));
        Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).nodeName());
        Assert.assertEquals(1.1F, ((float) (((java.nio.charset.CharsetEncoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newEncoder()).averageBytesPerChar())), 0.1);
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).classNames().isEmpty());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).siblingIndex())));
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).toString());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).dataNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).parents().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).previousSibling());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).tagName());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).isBlock());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).parents().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).outerHtml());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).text());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).head());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).siblingNodes().isEmpty());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).canEncode());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).data());
        Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).nodeName());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).text());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).classNames().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).updateMetaCharsetElement());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).previousSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).parent());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isKnownTag());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).val());
        Assert.assertEquals("head", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).getName());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).childNodes().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).size())));
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).previousSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).dataNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).previousElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).classNames().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).childNodesCopy().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).parentNode());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).previousSibling());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).nodeName());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).text());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).siblingNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isFormSubmittable());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).dataset().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).val());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).val());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outputSettings()).indentAmount())));
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).className());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).cssSelector());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outputSettings()).prettyPrint());
        Assert.assertFalse(((org.jsoup.nodes.Document)doc).getAllElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).ownText());
        Assert.assertEquals("noQuirks", ((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).quirksMode()).name());
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).classNames().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).id());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).baseUri());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).hasText());
        Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).hashCode())));
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).previousElementSibling());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).toString());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).className());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).isBlock());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).parent());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isBlock());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).parents().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).elementSiblingIndex())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).childNodeSize())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).childNodeSize())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).hasText());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).isBlock());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).dataset().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).outerHtml());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).baseUri());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).title());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).nodeName());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).className());
        Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).tagName());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).childNodesCopy().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).childNodeSize())));
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).children().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).siblingNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).children().isEmpty());
        Assert.assertEquals("html > body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).cssSelector());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).parents().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).text());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).parent());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).children().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).html());
        Assert.assertEquals("<html>\n <head>\n  <title>One</title>\n </head>\n <body>\n  Two\n </body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outerHtml());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).nextSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).text());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).siblingIndex())));
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).hasText());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).previousElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).title());
        Assert.assertEquals("html", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).tagName());
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isInline());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).dataset().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).toString());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).siblingElements().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).previousSibling());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isFormSubmittable());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).dataset().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).hasText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).siblingIndex())));
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).html());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).aliases().contains("unicode-1-1-utf-8"));
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).aliases().contains("UTF8"));
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).isBlock());
        Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).tagName());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).previousElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).childNodesCopy().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).nextSibling());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).canContainBlock());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).nextElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).dataNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).dataNodes().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).nodeName());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).isBlock());
        Assert.assertFalse(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outputSettings()).outline());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).className());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).val());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).dataNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).nextSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).html());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).childNodesCopy().isEmpty());
        Assert.assertEquals(-143577441, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).hashCode())));
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).nextElementSibling());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).aliases().contains("unicode-1-1-utf-8"));
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).aliases().contains("UTF8"));
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).dataset().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).previousSibling());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isData());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).dataset().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).parentNode());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).data());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).nextElementSibling());
        Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).hashCode())));
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).parents().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).isBlock());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).asList().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).parentNode());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).indentAmount())));
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).id());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).data());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).hashCode())));
        Assert.assertEquals("head", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).toString());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).previousSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).siblingElements().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).getAllElements().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).classNames().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).html());
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).children().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).id());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isKnownTag());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).dataNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).updateMetaCharsetElement());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).location());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).html());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).textNodes().isEmpty());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).nodeName());
        Assert.assertEquals(3.0F, ((float) (((java.nio.charset.CharsetEncoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newEncoder()).maxBytesPerChar())), 0.1);
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).parent());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).html());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).className());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).preserveWhitespace());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outerHtml());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).dataset().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).textNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outputSettings()).outline());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).siblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).dataset().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).siblingElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).val());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).childNodesCopy().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).title());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).getName());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).siblingIndex())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).siblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).dataset().isEmpty());
        Assert.assertFalse(((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).isAutoDetecting());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isBlock());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownText());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).val());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).hasText());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).val());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).parents().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).hasText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).childNodeSize())));
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)doc).siblingIndex())));
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).text());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isSelfClosing());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).size())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).getAllElements().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).previousElementSibling());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).parentNode());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).classNames().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).isBlock());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).location());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).toString());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)doc).quirksMode()).ordinal())));
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).textNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).nextSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).dataNodes().isEmpty());
        Assert.assertEquals("html", ((org.jsoup.nodes.Document.OutputSettings.Syntax)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).syntax()).name());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).getAllElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).val());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).textNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).nextElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).ownText());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).dataNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).ownText());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).dataset().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).parent());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).siblingNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).classNames().isEmpty());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).outerHtml());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).classNames().isEmpty());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).isRegistered());
        Assert.assertEquals(1.0F, ((float) (((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).maxCharsPerByte())), 0.1);
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).isBlock());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.OutputSettings.Syntax)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).syntax()).ordinal())));
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).toString());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).outerHtml());
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).siblingElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).outerHtml());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).parentNode());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).parentNode());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).lastElementSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).siblingElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).ownText());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).html());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).nextSibling());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).parentNode());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).ownText());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).location());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).siblingElements().isEmpty());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).baseUri());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).isRegistered());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).tagName());
        Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).nodeName());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).toString());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).getAllElements().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isSelfClosing());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).classNames().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).textNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).siblingNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).isBlock());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).dataset().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isBlock());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).toString());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).ownText());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).text());
        Assert.assertEquals("html > head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).cssSelector());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).siblingIndex())));
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).name());
        Assert.assertFalse(((org.jsoup.nodes.Document)doc).isBlock());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isBlock());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isFormListed());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).parentNode());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).id());
        Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).toString());
        Assert.assertEquals("<body></body>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).outerHtml());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).cssSelector());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).size())));
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).outerHtml());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).toString());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).baseUri());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).data());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownText());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).isRegistered());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).tagName());
        Assert.assertFalse(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).childNodesCopy().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).childNodeSize())));
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).firstElementSibling());
        Assert.assertNull(((org.jsoup.nodes.Document)doc).parent());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).childNodesCopy().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tagName());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).parent());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).getAllElements().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).elementSiblingIndex())));
        Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isKnownTag());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).html());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).previousSibling());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).elementSiblingIndex())));
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).siblingElements().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).dataset().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).siblingNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).children().isEmpty());
        Assert.assertEquals("#root", ((org.jsoup.nodes.Document)doc).cssSelector());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).elementSiblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).siblingNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).updateMetaCharsetElement());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).val());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).id());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).dataset().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).id());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).parent());
        Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).nodeName());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).childNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).children().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).hasText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).quirksMode()).ordinal())));
        Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).className());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).siblingNodes().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).elementSiblingIndex())));
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).previousElementSibling());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isBlock());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).getAllElements().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).nextElementSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).data());
        Assert.assertEquals("html", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).nodeName());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).canContainBlock());
        Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).nextSibling());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).ownText());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).canEncode());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).text());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).dataNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).id());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).toString());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).siblingNodes().isEmpty());
        Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).displayName());
        Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).firstElementSibling());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isFormListed());
        Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).html());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)doc).baseUri());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).siblingNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).getAllElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).outerHtml());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).text());
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Entities.EscapeMode)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).escapeMode()).ordinal())));
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).toString());
        Assert.assertFalse(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).dataNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).className());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isFormSubmittable());
        Assert.assertFalse(((org.jsoup.nodes.Document)doc).updateMetaCharsetElement());
        Assert.assertEquals("<html></html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).toString());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).id());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).elementSiblingIndex())));
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).childNodeSize())));
        Assert.assertNull(((org.jsoup.nodes.Document)doc).parentNode());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).childNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).hasText());
        Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).html());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).baseUri());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).elementSiblingIndex())));
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).html());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).isBlock());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).title());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).updateMetaCharsetElement());
        Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).nodeName());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).preserveWhitespace());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).ownText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)doc).childNodeSize())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).children().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).siblingElements().isEmpty());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).hashCode())));
        Assert.assertTrue(((org.jsoup.nodes.Document)doc).dataNodes().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).outerHtml());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).siblingIndex())));
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).dataNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).parent());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).outerHtml());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).nextSibling());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).dataNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isFormListed());
        Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).asList().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).classNames().isEmpty());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).baseUri());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).nextElementSibling());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).childNodeSize())));
        Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).toString());
        Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).canEncode());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).dataNodes().isEmpty());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).nextSibling());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).textNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).siblingNodes().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).hasText());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).getAllElements().isEmpty());
        Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).outerHtml());
        Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).parentNode());
        Assert.assertEquals("base", ((org.jsoup.nodes.Entities.EscapeMode)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).escapeMode()).name());
        Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).childNodesCopy().isEmpty());
        Assert.assertEquals("http://foo.com/", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).baseUri());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).className());
        Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).id());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).siblingIndex())));
        Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).getAllElements().isEmpty());
        Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isData());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).childNodes().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).siblingElements().isEmpty());
        Assert.assertEquals("<html>\n <head>\n  <title>One</title>\n </head>\n <body>\n  Two\n </body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).outerHtml());
        Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).getAllElements().isEmpty());
        Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).parents().isEmpty());
        Assert.assertFalse(((org.jsoup.nodes.Document)doc).hasText());
        Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).elementSiblingIndex())));
        Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).childNodeSize())));
        doc.head().text();
        doc.outputSettings().charset().displayName();
    }

    @Test(timeout = 120000)
    public void wrongMetaCharsetFallback() throws Exception {
        try {
            final byte[] input = "<html><head><meta charset=iso-8></head><body></body></html>".getBytes("UTF-8");
            final ByteBuffer inBuffer = ByteBuffer.wrap(input);
            Document doc = DataUtil.parseByteData(inBuffer, null, "http://example.com", Parser.htmlParser());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).childNodesCopy().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).classNames().isEmpty());
            Assert.assertEquals("<head></head>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).outerHtml());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).location());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).toString());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).asList().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tagName());
            Assert.assertEquals("<head></head>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).toString());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).parents().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).toString());
            Assert.assertEquals("\ufffd", ((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).replacement());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).getAllElements().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).nextElementSibling());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).hasText());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).html());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).siblingIndex())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).childNodeSize())));
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).ownText());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).nextSibling());
            Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).nodeName());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).className());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).siblingNodes().isEmpty());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).html());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).cssSelector());
            Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).hashCode())));
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).data());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).nextElementSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).previousElementSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).nextElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).asList().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).cssSelector());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).hasText());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).dataset().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).nextElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).ownText());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).data());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isSelfClosing());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isData());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).childNodesCopy().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).childNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).toString());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).isBlock());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).data());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).baseUri());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).nextElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).data());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).dataset().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).nodeName());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).parentNode());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).hashCode())));
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).val());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).nodeName());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).nextSibling());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).previousSibling());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).elementSiblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).childNodes().isEmpty());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).html());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).dataNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).siblingNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).val());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).elementSiblingIndex())));
            Assert.assertEquals("html > body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).cssSelector());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).baseUri());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).nextSibling());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).nextSibling());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).parents().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).nextSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).childNodes().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)doc).nodeName());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).childNodeSize())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).siblingIndex())));
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).parentNode());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).parent());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).text());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).cssSelector());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).toString());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).childNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).getAllElements().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).elementSiblingIndex())));
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).previousElementSibling());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)doc).tagName());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).parent());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isInline());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).previousSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).parent());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).toString());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).isBlock());
            Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).hashCode())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).siblingIndex())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).hashCode())));
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isFormSubmittable());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).siblingElements().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).siblingNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).isBlock());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).title());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).nodeName());
            Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).hashCode())));
            Assert.assertFalse(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).outline());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).isBlock());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).canContainBlock());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).cssSelector());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).childNodeSize())));
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isData());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).getAllElements().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).siblingNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).isBlock());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).location());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).previousElementSibling());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).baseUri());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).parent());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).childNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).lastElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).siblingNodes().isEmpty());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).location());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).isBlock());
            Assert.assertEquals("noQuirks", ((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)doc).quirksMode()).name());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).previousSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).className());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).nodeName());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).getName());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).nextSibling());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).nodeName());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).textNodes().isEmpty());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).childNodeSize())));
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).parent());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).text());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).name());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).data());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).childNodes().isEmpty());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).baseUri());
            Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).nodeName());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).parents().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).dataset().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).children().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).parents().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).hasText());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).childNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).head());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).children().isEmpty());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).displayName());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).isRegistered());
            Assert.assertNull(((org.jsoup.nodes.Document)doc).nextElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).classNames().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).previousSibling());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).baseUri());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).siblingNodes().isEmpty());
            Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).nodeName());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).updateMetaCharsetElement());
            Assert.assertNull(((org.jsoup.nodes.Document)doc).previousSibling());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).cssSelector());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).className());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).ownText());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).previousSibling());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).elementSiblingIndex())));
            Assert.assertEquals("html > body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).cssSelector());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).classNames().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).html());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).data());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).hasText());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).cssSelector());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).val());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).parents().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).childNodeSize())));
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).childNodes().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).siblingIndex())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).updateMetaCharsetElement());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).title());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).previousSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).id());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).siblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).parents().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).ownText());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).parentNode());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isFormListed());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).getAllElements().isEmpty());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).formatAsBlock());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).siblingElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).html());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).hashCode())));
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).childNodeSize())));
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).cssSelector());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).siblingNodes().isEmpty());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).name());
            Assert.assertTrue(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).prettyPrint());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).text());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).parents().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).children().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).childNodesCopy().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).data());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).tagName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).outerHtml());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).siblingElements().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).preserveWhitespace());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).childNodesCopy().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).canContainBlock());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).dataset().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).textNodes().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).nodeName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).title());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).id());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).hasText());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).toString());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).baseUri());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).childNodesCopy().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).siblingElements().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tagName());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).updateMetaCharsetElement());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).title());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).nodeName());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).nodeName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).ownText());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).firstElementSibling());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isFormSubmittable());
            Assert.assertEquals("html > head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).cssSelector());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).toString());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isInline());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).dataset().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).toString());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).formatAsBlock());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).dataNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).hasText());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).dataset().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isFormListed());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).formatAsBlock());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).text());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).toString());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).dataNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).siblingElements().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).siblingElements().isEmpty());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).toString());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).elementSiblingIndex())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).isBlock());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isInline());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).dataset().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).data());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).siblingIndex())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).elementSiblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).siblingNodes().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).quirksMode()).ordinal())));
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).childNodesCopy().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).lastElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).dataset().isEmpty());
            Assert.assertEquals("html > head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).cssSelector());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).nodeName());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isEmpty());
            Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).hashCode())));
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).baseUri());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).childNodesCopy().isEmpty());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).aliases().contains("unicode-1-1-utf-8"));
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).aliases().contains("UTF8"));
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).data());
            Assert.assertNull(((org.jsoup.nodes.Document)doc).nextSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).parentNode());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).previousElementSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).parent());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).parents().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).nodeName());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).asList().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).className());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).dataNodes().isEmpty());
            Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tagName());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).previousSibling());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).nextElementSibling());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).baseUri());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).outerHtml());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).tagName());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).siblingElements().isEmpty());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).location());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).data());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outputSettings()).indentAmount())));
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).siblingElements().isEmpty());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).canEncode());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).canContainBlock());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).html());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isKnownTag());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).siblingElements().isEmpty());
            Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).hashCode())));
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).parent());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).elementSiblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).children().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).className());
            Assert.assertNull(((org.jsoup.nodes.Document)doc).previousElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).id());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).childNodesCopy().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).nodeName());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).preserveWhitespace());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).cssSelector());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).childNodeSize())));
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).nextSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).previousElementSibling());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).baseUri());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).text());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).baseUri());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).childNodeSize())));
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).getName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).data());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).dataset().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).getAllElements().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).siblingIndex())));
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).location());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).html());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).toString());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).siblingIndex())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).updateMetaCharsetElement());
            Assert.assertEquals("<html></html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).toString());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).previousSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).isBlock());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).parentNode());
            Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).tagName());
            Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).tagName());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).classNames().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).text());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).textNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isData());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).parentNode());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).preserveWhitespace());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).body());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).nextElementSibling());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).siblingIndex())));
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isInline());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).tagName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).text());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).previousElementSibling());
            byte[] array_1635508580 = new byte[]{63};
            	byte[] array_312752620 = (byte[])((java.nio.charset.CharsetEncoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newEncoder()).replacement();
            	for(int ii = 0; ii <array_1635508580.length; ii++) {
            		org.junit.Assert.assertEquals(array_1635508580[ii], array_312752620[ii]);
            	};
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).title());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).classNames().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).textNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).childNodes().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).cssSelector());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).parent());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).getAllElements().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).childNodeSize())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).size())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).isBlock());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).formatAsBlock());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).hasText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).siblingIndex())));
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).formatAsBlock());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).childNodesCopy().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).nextElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).toString());
            Assert.assertEquals("<html>\n <head>\n  <meta charset=\"iso-8\">\n </head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)doc).outerHtml());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).unwrap());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isSelfClosing());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).nextSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).previousSibling());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).name());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).childNodesCopy().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).val());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).nextSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).siblingElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).val());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).ownText());
            Assert.assertEquals("<body></body>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).toString());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isKnownTag());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).dataNodes().isEmpty());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).displayName());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).nextElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).text());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).className());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).displayName());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).id());
            Assert.assertTrue(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outputSettings()).prettyPrint());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).baseUri());
            Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).tagName());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).getName());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).parentNode());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).textNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).ownText());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).baseUri());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).dataset().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).dataNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).childNodesCopy().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).children().isEmpty());
            Assert.assertEquals(1.0F, ((float) (((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).averageCharsPerByte())), 0.1);
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).className());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).children().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).previousSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).html());
            Assert.assertEquals("<html></html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).toString());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).parent());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).aliases().contains("unicode-1-1-utf-8"));
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).aliases().contains("UTF8"));
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).childNodesCopy().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).textNodes().isEmpty());
            Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).hashCode())));
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).val());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).size())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).children().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).previousElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).id());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).outerHtml());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).id());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).tagName());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).childNodeSize())));
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).children().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).classNames().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).getAllElements().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).childNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).nextSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).dataset().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).previousElementSibling());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).cssSelector());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).siblingElements().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).classNames().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).parentNode());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).text());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).nextElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).dataset().isEmpty());
            Assert.assertEquals("noQuirks", ((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).quirksMode()).name());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).tagName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).className());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).className());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).childNodeSize())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).elementSiblingIndex())));
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).className());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).nextElementSibling());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)doc).location());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).unwrap());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).elementSiblingIndex())));
            Assert.assertEquals("html", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).cssSelector());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).hasText());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).outerHtml());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).data());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).toString());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).previousElementSibling());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).tagName());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).classNames().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).siblingNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).data());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).html());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).textNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isSelfClosing());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)doc).elementSiblingIndex())));
            Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).nodeName());
            Assert.assertEquals(1.1F, ((float) (((java.nio.charset.CharsetEncoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newEncoder()).averageBytesPerChar())), 0.1);
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).classNames().isEmpty());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).siblingIndex())));
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).toString());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).dataNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).parents().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).previousSibling());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).tagName());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).isBlock());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).parents().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).outerHtml());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).text());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).head());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).siblingNodes().isEmpty());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).canEncode());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).data());
            Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).nodeName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).text());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).classNames().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).updateMetaCharsetElement());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).previousSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).parent());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isKnownTag());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).val());
            Assert.assertEquals("head", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).getName());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).childNodes().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).size())));
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).previousSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).dataNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).previousElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).classNames().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).childNodesCopy().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).parentNode());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).previousSibling());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).nodeName());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).text());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).siblingNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isFormSubmittable());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).dataset().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).val());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).val());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outputSettings()).indentAmount())));
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).className());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).cssSelector());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outputSettings()).prettyPrint());
            Assert.assertFalse(((org.jsoup.nodes.Document)doc).getAllElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).ownText());
            Assert.assertEquals("noQuirks", ((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).quirksMode()).name());
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).classNames().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).id());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).baseUri());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).hasText());
            Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).hashCode())));
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).previousElementSibling());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).className());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).isBlock());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).parent());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isBlock());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).parents().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).elementSiblingIndex())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).childNodeSize())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).childNodeSize())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).hasText());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).isBlock());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).dataset().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).outerHtml());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).baseUri());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).title());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).nodeName());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).className());
            Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).tagName());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).childNodesCopy().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).childNodeSize())));
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).children().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).siblingNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).children().isEmpty());
            Assert.assertEquals("html > body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).cssSelector());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).parents().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).text());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).parent());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).children().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).html());
            Assert.assertEquals("<html>\n <head>\n  <meta charset=\"iso-8\">\n </head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outerHtml());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).nextSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).text());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).siblingIndex())));
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).hasText());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).previousElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).title());
            Assert.assertEquals("html", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).tagName());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isInline());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).dataset().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).toString());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).siblingElements().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).previousSibling());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isFormSubmittable());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).dataset().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).hasText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).siblingIndex())));
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).html());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).aliases().contains("unicode-1-1-utf-8"));
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).aliases().contains("UTF8"));
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).isBlock());
            Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).tagName());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).previousElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).childNodesCopy().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).nextSibling());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).canContainBlock());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).nextElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).dataNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).dataNodes().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).nodeName());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).isBlock());
            Assert.assertFalse(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outputSettings()).outline());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).className());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).val());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).dataNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).nextSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).html());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).childNodesCopy().isEmpty());
            Assert.assertEquals(-143577441, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).hashCode())));
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).nextElementSibling());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).aliases().contains("unicode-1-1-utf-8"));
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).aliases().contains("UTF8"));
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).dataset().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).previousSibling());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isData());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).dataset().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).parentNode());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).data());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).nextElementSibling());
            Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).hashCode())));
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).parents().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).isBlock());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).asList().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).parentNode());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).indentAmount())));
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).id());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).data());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).hashCode())));
            Assert.assertEquals("head", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).toString());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).previousSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).siblingElements().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).getAllElements().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).classNames().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).html());
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).children().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).id());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isKnownTag());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).dataNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).updateMetaCharsetElement());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).location());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).html());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).textNodes().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).nodeName());
            Assert.assertEquals(3.0F, ((float) (((java.nio.charset.CharsetEncoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newEncoder()).maxBytesPerChar())), 0.1);
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).parent());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).html());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).className());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).preserveWhitespace());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outerHtml());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).dataset().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).textNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outputSettings()).outline());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).siblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).dataset().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).siblingElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).val());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).childNodesCopy().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).title());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).getName());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).siblingIndex())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).siblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).dataset().isEmpty());
            Assert.assertFalse(((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).isAutoDetecting());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isBlock());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownText());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).val());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).hasText());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).val());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).parents().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).hasText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).childNodeSize())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)doc).siblingIndex())));
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).text());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isSelfClosing());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).size())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).getAllElements().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).previousElementSibling());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).parentNode());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).classNames().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).isBlock());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).location());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).toString());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)doc).quirksMode()).ordinal())));
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).textNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).nextSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).dataNodes().isEmpty());
            Assert.assertEquals("html", ((org.jsoup.nodes.Document.OutputSettings.Syntax)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).syntax()).name());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).getAllElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).val());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).textNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).nextElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).ownText());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).dataNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).ownText());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).dataset().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).parent());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).siblingNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).classNames().isEmpty());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).outerHtml());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).classNames().isEmpty());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).isRegistered());
            Assert.assertEquals(1.0F, ((float) (((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).maxCharsPerByte())), 0.1);
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).isBlock());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.OutputSettings.Syntax)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).syntax()).ordinal())));
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).toString());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).outerHtml());
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).siblingElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).outerHtml());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).parentNode());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).parentNode());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).lastElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).siblingElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).ownText());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).html());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).nextSibling());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).parentNode());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).ownText());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).location());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).siblingElements().isEmpty());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).baseUri());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).isRegistered());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).tagName());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).nodeName());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).toString());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).getAllElements().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isSelfClosing());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).classNames().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).textNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).siblingNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).isBlock());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).dataset().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isBlock());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).ownText());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).text());
            Assert.assertEquals("html > head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).cssSelector());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).siblingIndex())));
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).name());
            Assert.assertFalse(((org.jsoup.nodes.Document)doc).isBlock());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isBlock());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isFormListed());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).parentNode());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).id());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).toString());
            Assert.assertEquals("<body></body>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).outerHtml());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).cssSelector());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).size())));
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).outerHtml());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).toString());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).baseUri());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).data());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownText());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).isRegistered());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).tagName());
            Assert.assertFalse(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).childNodesCopy().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).childNodeSize())));
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).firstElementSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)doc).parent());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).childNodesCopy().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tagName());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).parent());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).getAllElements().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).elementSiblingIndex())));
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isKnownTag());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).html());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).previousSibling());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).elementSiblingIndex())));
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).siblingElements().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).dataset().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).siblingNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).children().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)doc).cssSelector());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).elementSiblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).siblingNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).updateMetaCharsetElement());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).val());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).id());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).dataset().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).id());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).parent());
            Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).nodeName());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).childNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).children().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).hasText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).quirksMode()).ordinal())));
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).className());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).siblingNodes().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).elementSiblingIndex())));
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).previousElementSibling());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isBlock());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).getAllElements().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).nextElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).data());
            Assert.assertEquals("html", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).nodeName());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).canContainBlock());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).nextSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).ownText());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).canEncode());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).text());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).dataNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).id());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).toString());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).siblingNodes().isEmpty());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).displayName());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).firstElementSibling());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isFormListed());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).html());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)doc).baseUri());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).siblingNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).getAllElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).outerHtml());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).text());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Entities.EscapeMode)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).escapeMode()).ordinal())));
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).toString());
            Assert.assertFalse(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).dataNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).className());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isFormSubmittable());
            Assert.assertFalse(((org.jsoup.nodes.Document)doc).updateMetaCharsetElement());
            Assert.assertEquals("<html></html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).id());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).elementSiblingIndex())));
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).childNodeSize())));
            Assert.assertNull(((org.jsoup.nodes.Document)doc).parentNode());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).childNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).hasText());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).html());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).baseUri());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).elementSiblingIndex())));
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).html());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).isBlock());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).title());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).updateMetaCharsetElement());
            Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).nodeName());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).preserveWhitespace());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).ownText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)doc).childNodeSize())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).children().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).siblingElements().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).hashCode())));
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).dataNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).outerHtml());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).siblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).dataNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).parent());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).outerHtml());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).nextSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).dataNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isFormListed());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).asList().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).classNames().isEmpty());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).baseUri());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).nextElementSibling());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).childNodeSize())));
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).toString());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).canEncode());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).dataNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).nextSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).siblingNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).hasText());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).getAllElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).outerHtml());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).parentNode());
            Assert.assertEquals("base", ((org.jsoup.nodes.Entities.EscapeMode)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).escapeMode()).name());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).childNodesCopy().isEmpty());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).baseUri());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).className());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).id());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).siblingIndex())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).getAllElements().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isData());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).siblingElements().isEmpty());
            Assert.assertEquals("<html>\n <head>\n  <meta charset=\"iso-8\">\n </head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).outerHtml());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).getAllElements().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).parents().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)doc).hasText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).elementSiblingIndex())));
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).childNodeSize())));
            final String expected = "<html>\n" + ((((" <head>\n" + "  <meta charset=\"iso-8\">\n") + " </head>\n") + " <body></body>\n") + "</html>");
            Assert.assertEquals("<html>\n <head>\n  <meta charset=\"iso-8\">\n </head>\n <body></body>\n</html>", expected);
            String o_wrongMetaCharsetFallback__11 = doc.toString();
            Assert.assertEquals("", o_wrongMetaCharsetFallback__11);
            Assert.assertEquals("<html>\n <head>\n  <meta charset=\"iso-8\">\n </head>\n <body></body>\n</html>", expected);
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).childNodesCopy().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).classNames().isEmpty());
            Assert.assertEquals("<head></head>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).outerHtml());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).location());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).toString());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).asList().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tagName());
            Assert.assertEquals("<head></head>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).toString());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).parents().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).toString());
            Assert.assertEquals("\ufffd", ((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).replacement());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).getAllElements().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).nextElementSibling());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).hasText());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).html());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).siblingIndex())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).childNodeSize())));
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).ownText());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).nextSibling());
            Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).nodeName());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).className());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).siblingNodes().isEmpty());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).html());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).cssSelector());
            Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).hashCode())));
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).data());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).nextElementSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).previousElementSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).nextElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).asList().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).cssSelector());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).hasText());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).dataset().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).nextElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).ownText());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).data());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isSelfClosing());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isData());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).childNodesCopy().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).childNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).toString());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).isBlock());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).data());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).baseUri());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).nextElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).data());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).dataset().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).nodeName());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).parentNode());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).hashCode())));
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).val());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).nodeName());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).nextSibling());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).previousSibling());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).elementSiblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).childNodes().isEmpty());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).html());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).dataNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).siblingNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).val());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).elementSiblingIndex())));
            Assert.assertEquals("html > body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).cssSelector());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).baseUri());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).nextSibling());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).nextSibling());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).parents().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).nextSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).childNodes().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)doc).nodeName());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).childNodeSize())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).siblingIndex())));
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).parentNode());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).parent());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).text());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).cssSelector());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).toString());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).childNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).getAllElements().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).elementSiblingIndex())));
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).previousElementSibling());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)doc).tagName());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).parent());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isInline());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).previousSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).parent());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).toString());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).isBlock());
            Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).hashCode())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).siblingIndex())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).hashCode())));
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isFormSubmittable());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).siblingElements().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).siblingNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).isBlock());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).title());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).nodeName());
            Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).hashCode())));
            Assert.assertFalse(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).outline());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).isBlock());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).canContainBlock());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).cssSelector());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).childNodeSize())));
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isData());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).getAllElements().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).siblingNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).isBlock());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).location());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).previousElementSibling());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).baseUri());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).parent());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).childNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).lastElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).siblingNodes().isEmpty());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).location());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).isBlock());
            Assert.assertEquals("noQuirks", ((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)doc).quirksMode()).name());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).previousSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).className());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).nodeName());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).getName());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).nextSibling());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).nodeName());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).textNodes().isEmpty());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).childNodeSize())));
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).parent());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).text());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).name());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).data());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).childNodes().isEmpty());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).baseUri());
            Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).nodeName());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).parents().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).dataset().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).children().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).parents().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).hasText());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).childNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).head());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).children().isEmpty());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).displayName());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).isRegistered());
            Assert.assertNull(((org.jsoup.nodes.Document)doc).nextElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).classNames().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).previousSibling());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).baseUri());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).siblingNodes().isEmpty());
            Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).nodeName());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).updateMetaCharsetElement());
            Assert.assertNull(((org.jsoup.nodes.Document)doc).previousSibling());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).cssSelector());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).className());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).ownText());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).previousSibling());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).elementSiblingIndex())));
            Assert.assertEquals("html > body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).cssSelector());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).classNames().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).html());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).data());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).hasText());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).cssSelector());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).val());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).parents().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).childNodeSize())));
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).childNodes().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).siblingIndex())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).updateMetaCharsetElement());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).title());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).previousSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).id());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).siblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).parents().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).ownText());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).parentNode());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isFormListed());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).getAllElements().isEmpty());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).formatAsBlock());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).siblingElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).html());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).hashCode())));
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).childNodeSize())));
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).cssSelector());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).siblingNodes().isEmpty());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).name());
            Assert.assertTrue(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).prettyPrint());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).text());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).parents().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).children().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).childNodesCopy().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).data());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).tagName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).outerHtml());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).siblingElements().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).preserveWhitespace());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).childNodesCopy().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).canContainBlock());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).dataset().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).textNodes().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).nodeName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).title());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).id());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).hasText());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).toString());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).baseUri());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).childNodesCopy().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).siblingElements().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tagName());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).updateMetaCharsetElement());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).title());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).nodeName());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).nodeName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).ownText());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).firstElementSibling());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isFormSubmittable());
            Assert.assertEquals("html > head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).cssSelector());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).toString());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isInline());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).dataset().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).toString());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).formatAsBlock());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).dataNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).hasText());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).dataset().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isFormListed());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).formatAsBlock());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).text());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).toString());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).dataNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).siblingElements().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).siblingElements().isEmpty());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).toString());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).elementSiblingIndex())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).isBlock());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isInline());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).dataset().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).data());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).siblingIndex())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).elementSiblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).siblingNodes().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).quirksMode()).ordinal())));
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).childNodesCopy().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).lastElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).dataset().isEmpty());
            Assert.assertEquals("html > head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).cssSelector());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).nodeName());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isEmpty());
            Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).hashCode())));
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).baseUri());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).childNodesCopy().isEmpty());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).aliases().contains("unicode-1-1-utf-8"));
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).aliases().contains("UTF8"));
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).data());
            Assert.assertNull(((org.jsoup.nodes.Document)doc).nextSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).parentNode());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).previousElementSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).parent());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).parents().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).nodeName());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).asList().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).className());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).dataNodes().isEmpty());
            Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tagName());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).previousSibling());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).nextElementSibling());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).baseUri());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).outerHtml());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).tagName());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).siblingElements().isEmpty());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).location());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).data());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outputSettings()).indentAmount())));
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).siblingElements().isEmpty());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).canEncode());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).canContainBlock());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).html());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isKnownTag());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).siblingElements().isEmpty());
            Assert.assertEquals(-375097755, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).hashCode())));
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).parent());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).elementSiblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).children().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).className());
            Assert.assertNull(((org.jsoup.nodes.Document)doc).previousElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).id());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).childNodesCopy().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).nodeName());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).preserveWhitespace());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).cssSelector());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).childNodeSize())));
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).nextSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).previousElementSibling());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).baseUri());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).text());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).baseUri());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).childNodeSize())));
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).getName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).data());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).dataset().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).getAllElements().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).siblingIndex())));
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).location());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).html());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).toString());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).siblingIndex())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).updateMetaCharsetElement());
            Assert.assertEquals("<html></html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).toString());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).previousSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).isBlock());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).parentNode());
            Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).tagName());
            Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).tagName());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).classNames().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).text());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).textNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isData());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).parentNode());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).preserveWhitespace());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).body());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).nextElementSibling());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).siblingIndex())));
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isInline());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).tagName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).text());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).previousElementSibling());
            byte[] array_960144037 = new byte[]{63};
            	byte[] array_619987209 = (byte[])((java.nio.charset.CharsetEncoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newEncoder()).replacement();
            	for(int ii = 0; ii <array_960144037.length; ii++) {
            		org.junit.Assert.assertEquals(array_960144037[ii], array_619987209[ii]);
            	};
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).title());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).classNames().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).textNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).childNodes().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).cssSelector());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).parent());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).getAllElements().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).childNodeSize())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).size())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).isBlock());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).formatAsBlock());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).hasText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).siblingIndex())));
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).formatAsBlock());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).childNodesCopy().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).nextElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).outerHtml());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).unwrap());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isSelfClosing());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).nextSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).previousSibling());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).name());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).childNodesCopy().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).val());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).nextSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).siblingElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).val());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).ownText());
            Assert.assertEquals("<body></body>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).toString());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isKnownTag());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).dataNodes().isEmpty());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).displayName());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).nextElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).text());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).className());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).displayName());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).id());
            Assert.assertTrue(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outputSettings()).prettyPrint());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).baseUri());
            Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).tagName());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).getName());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).parentNode());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).textNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).ownText());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).baseUri());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).dataset().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).dataNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).childNodesCopy().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).children().isEmpty());
            Assert.assertEquals(1.0F, ((float) (((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).averageCharsPerByte())), 0.1);
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).className());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).children().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).previousSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).html());
            Assert.assertEquals("<html></html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).toString());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).parent());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).aliases().contains("unicode-1-1-utf-8"));
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).aliases().contains("UTF8"));
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).childNodesCopy().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).textNodes().isEmpty());
            Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).hashCode())));
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).val());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).size())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).children().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).previousElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).id());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).outerHtml());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).id());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).tagName());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).childNodeSize())));
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).children().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).classNames().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).getAllElements().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).childNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).nextSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).dataset().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).previousElementSibling());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).cssSelector());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).siblingElements().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).classNames().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).parentNode());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).text());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).nextElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).dataset().isEmpty());
            Assert.assertEquals("noQuirks", ((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).quirksMode()).name());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).tagName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).className());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).className());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).childNodeSize())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).elementSiblingIndex())));
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).className());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).nextElementSibling());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)doc).location());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).unwrap());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).elementSiblingIndex())));
            Assert.assertEquals("html", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).cssSelector());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).hasText());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).outerHtml());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).data());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).toString());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).previousElementSibling());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).tagName());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).classNames().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).siblingNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).data());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).html());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).textNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isSelfClosing());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)doc).elementSiblingIndex())));
            Assert.assertEquals("#document", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).nodeName());
            Assert.assertEquals(1.1F, ((float) (((java.nio.charset.CharsetEncoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newEncoder()).averageBytesPerChar())), 0.1);
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).classNames().isEmpty());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).siblingIndex())));
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).toString());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).dataNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).parents().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).previousSibling());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).tagName());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).isBlock());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).parents().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).outerHtml());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).text());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).head());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).siblingNodes().isEmpty());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).canEncode());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).data());
            Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).nodeName());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).text());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).classNames().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).updateMetaCharsetElement());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).previousSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).parent());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isKnownTag());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).val());
            Assert.assertEquals("head", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).getName());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).childNodes().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).size())));
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).previousSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).dataNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).previousElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).classNames().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).childNodesCopy().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).parentNode());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).previousSibling());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).nodeName());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).text());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).siblingNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isFormSubmittable());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).dataset().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).val());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).val());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outputSettings()).indentAmount())));
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).className());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).cssSelector());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outputSettings()).prettyPrint());
            Assert.assertFalse(((org.jsoup.nodes.Document)doc).getAllElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).ownText());
            Assert.assertEquals("noQuirks", ((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).quirksMode()).name());
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).classNames().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).id());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).baseUri());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).hasText());
            Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).hashCode())));
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).previousElementSibling());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).className());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).isBlock());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).parent());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isBlock());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).parents().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).elementSiblingIndex())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).childNodeSize())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).childNodeSize())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).hasText());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).isBlock());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).dataset().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).outerHtml());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).baseUri());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).title());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).nodeName());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).className());
            Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).tagName());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).childNodesCopy().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).childNodeSize())));
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).children().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).siblingNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).children().isEmpty());
            Assert.assertEquals("html > body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).cssSelector());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).parents().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).text());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).parent());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).children().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).html());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outerHtml());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).nextSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).text());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).siblingIndex())));
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).hasText());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).previousElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).title());
            Assert.assertEquals("html", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).tagName());
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isInline());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).dataset().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).toString());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).siblingElements().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).previousSibling());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isFormSubmittable());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).dataset().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).hasText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).siblingIndex())));
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).html());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).aliases().contains("unicode-1-1-utf-8"));
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).aliases().contains("UTF8"));
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).isBlock());
            Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).tagName());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).previousElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).childNodesCopy().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).nextSibling());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).canContainBlock());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).nextElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).dataNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).dataNodes().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).nodeName());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).isBlock());
            Assert.assertFalse(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outputSettings()).outline());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).className());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).val());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).dataNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).nextSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).html());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).childNodesCopy().isEmpty());
            Assert.assertEquals(-143577441, ((int) (((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).hashCode())));
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).nextElementSibling());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).aliases().contains("unicode-1-1-utf-8"));
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).aliases().contains("UTF8"));
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).dataset().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).previousSibling());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isData());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).dataset().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).parentNode());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).data());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).nextElementSibling());
            Assert.assertEquals(81070450, ((int) (((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).hashCode())));
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).parents().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).isBlock());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).attributes()).asList().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).parentNode());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).indentAmount())));
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).id());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).data());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).hashCode())));
            Assert.assertEquals("head", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).toString());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).previousSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).siblingElements().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).getAllElements().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).classNames().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).html());
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).children().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).id());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isKnownTag());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).dataNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).updateMetaCharsetElement());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).location());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).html());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).textNodes().isEmpty());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).nodeName());
            Assert.assertEquals(3.0F, ((float) (((java.nio.charset.CharsetEncoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newEncoder()).maxBytesPerChar())), 0.1);
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).parent());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).html());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).className());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).preserveWhitespace());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).outerHtml());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).dataset().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).textNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).outputSettings()).outline());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).siblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).dataset().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).siblingElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).val());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).childNodesCopy().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).title());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).getName());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).siblingIndex())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).siblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).dataset().isEmpty());
            Assert.assertFalse(((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).isAutoDetecting());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isBlock());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownText());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).val());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).hasText());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).val());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).parents().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).hasText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).childNodeSize())));
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)doc).siblingIndex())));
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).text());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isSelfClosing());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).size())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).getAllElements().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).previousElementSibling());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).parentNode());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).classNames().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).isBlock());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).location());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).toString());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)doc).quirksMode()).ordinal())));
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).textNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).nextSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).dataNodes().isEmpty());
            Assert.assertEquals("html", ((org.jsoup.nodes.Document.OutputSettings.Syntax)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).syntax()).name());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).getAllElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).val());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).textNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).nextElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).ownText());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).dataNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).ownText());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)doc).attributes()).dataset().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).parent());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).siblingNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).classNames().isEmpty());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).outerHtml());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).classNames().isEmpty());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).isRegistered());
            Assert.assertEquals(1.0F, ((float) (((java.nio.charset.CharsetDecoder)((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).newDecoder()).maxCharsPerByte())), 0.1);
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).isBlock());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.OutputSettings.Syntax)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).syntax()).ordinal())));
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).toString());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).outerHtml());
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).siblingElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).outerHtml());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).parentNode());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).parentNode());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).lastElementSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).siblingElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).ownText());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).html());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).nextSibling());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).parentNode());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).ownText());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).location());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).siblingElements().isEmpty());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).baseUri());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).isRegistered());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).tagName());
            Assert.assertEquals("#document", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).nodeName());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).toString());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).getAllElements().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isSelfClosing());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).classNames().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).textNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).siblingNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).isBlock());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).dataset().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isBlock());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).ownText());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).text());
            Assert.assertEquals("html > head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).cssSelector());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).siblingIndex())));
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)doc).charset()).name());
            Assert.assertFalse(((org.jsoup.nodes.Document)doc).isBlock());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isBlock());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isFormListed());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).parentNode());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).id());
            Assert.assertEquals("#root", ((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).toString());
            Assert.assertEquals("<body></body>", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).outerHtml());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).cssSelector());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).attributes()).size())));
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).outerHtml());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).toString());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).root()).baseUri());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).data());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownText());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).charset()).isRegistered());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).tagName());
            Assert.assertFalse(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).childNodesCopy().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).childNodeSize())));
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).body()).firstElementSibling());
            Assert.assertNull(((org.jsoup.nodes.Document)doc).parent());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).childNodesCopy().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tagName());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).parent());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).getAllElements().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).elementSiblingIndex())));
            Assert.assertTrue(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).isKnownTag());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).html());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).previousSibling());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).elementSiblingIndex())));
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).siblingElements().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).dataset().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).siblingNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).children().isEmpty());
            Assert.assertEquals("#root", ((org.jsoup.nodes.Document)doc).cssSelector());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).elementSiblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).siblingNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).updateMetaCharsetElement());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).val());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).id());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).dataset().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).id());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).parent());
            Assert.assertEquals("head", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).previousElementSibling()).nodeName());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).childNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).children().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).hasText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document.QuirksMode)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).quirksMode()).ordinal())));
            Assert.assertEquals("", ((org.jsoup.nodes.Document)doc).className());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).siblingNodes().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).elementSiblingIndex())));
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).previousElementSibling());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).tag()).isBlock());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).getAllElements().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).nextElementSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).data());
            Assert.assertEquals("html", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).nodeName());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).canContainBlock());
            Assert.assertNull(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).nextSibling());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).ownText());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).charset()).canEncode());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).text());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).dataNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).id());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).toString());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).siblingNodes().isEmpty());
            Assert.assertEquals("UTF-8", ((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).displayName());
            Assert.assertNull(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).firstElementSibling());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isFormListed());
            Assert.assertEquals("", ((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).attributes()).html());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)doc).baseUri());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).siblingNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).getAllElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).outerHtml());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).text());
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Entities.EscapeMode)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).escapeMode()).ordinal())));
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).toString());
            Assert.assertFalse(((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).dataNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).className());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).tag()).isFormSubmittable());
            Assert.assertFalse(((org.jsoup.nodes.Document)doc).updateMetaCharsetElement());
            Assert.assertEquals("<html></html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).toString());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).body()).id());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).elementSiblingIndex())));
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).childNodeSize())));
            Assert.assertNull(((org.jsoup.nodes.Document)doc).parentNode());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).childNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).hasText());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).html());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).baseUri());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).elementSiblingIndex())));
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).html());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).isBlock());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).title());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).updateMetaCharsetElement());
            Assert.assertEquals("body", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).body()).nodeName());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).tag()).preserveWhitespace());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).ownText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)doc).childNodeSize())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).children().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).parent()).siblingElements().isEmpty());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).hashCode())));
            Assert.assertTrue(((org.jsoup.nodes.Document)doc).dataNodes().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).root()).outerHtml());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).siblingIndex())));
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).dataNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).parent());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).outerHtml());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).nextSibling());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).empty()).dataNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)doc).tag()).isFormListed());
            Assert.assertTrue(((org.jsoup.nodes.Attributes)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).attributes()).asList().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).classNames().isEmpty());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).root()).baseUri());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).nextElementSibling());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).childNodeSize())));
            Assert.assertEquals("", ((org.jsoup.nodes.Node)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).root()).toString());
            Assert.assertTrue(((java.nio.charset.Charset)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).charset()).canEncode());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).dataNodes().isEmpty());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).nextSibling());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).textNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).normalise()).siblingNodes().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).hasText());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).head()).getAllElements().isEmpty());
            Assert.assertEquals("", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).outerHtml());
            Assert.assertNull(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).parentNode());
            Assert.assertEquals("base", ((org.jsoup.nodes.Entities.EscapeMode)((org.jsoup.nodes.Document.OutputSettings)((org.jsoup.nodes.Document)doc).outputSettings()).escapeMode()).name());
            Assert.assertTrue(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).empty()).childNodesCopy().isEmpty());
            Assert.assertEquals("http://example.com", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).baseUri());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).className());
            Assert.assertEquals("", ((org.jsoup.nodes.Element)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).empty()).id());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)doc).empty()).ownerDocument()).siblingIndex())));
            Assert.assertFalse(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).getAllElements().isEmpty());
            Assert.assertFalse(((org.jsoup.parser.Tag)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).tag()).isData());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).ownerDocument()).ownerDocument()).childNodes().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).ownerDocument()).siblingElements().isEmpty());
            Assert.assertEquals("<html>\n <head></head>\n <body></body>\n</html>", ((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).outerHtml());
            Assert.assertFalse(((org.jsoup.nodes.Element)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).head()).getAllElements().isEmpty());
            Assert.assertTrue(((org.jsoup.nodes.Document)((org.jsoup.nodes.Node)((org.jsoup.nodes.Document)doc).root()).ownerDocument()).parents().isEmpty());
            Assert.assertFalse(((org.jsoup.nodes.Document)doc).hasText());
            Assert.assertEquals(0, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).normalise()).elementSiblingIndex())));
            Assert.assertEquals(1, ((int) (((org.jsoup.nodes.Document)((org.jsoup.nodes.Document)doc).normalise()).childNodeSize())));
        } catch (UnsupportedEncodingException ex) {
            ex.getMessage();
        }
    }
}

