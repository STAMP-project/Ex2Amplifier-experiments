@org.junit.Test(timeout = 120000)
public void selfClosingOnNonvoidIsError_Ex2_JBSE378() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(5);
    parser.parseInput(html, "");
    org.junit.Assert.assertEquals(1, parser.getErrors().size());
    org.junit.Assert.assertEquals("18: Tag cannot be self closing; not a void tag", parser.getErrors().get(0).toString());
    org.junit.Assert.assertFalse(org.jsoup.Jsoup.isValid(html, org.jsoup.safety.Whitelist.relaxed()));
    java.lang.String clean = org.jsoup.Jsoup.clean(html, org.jsoup.safety.Whitelist.relaxed());
    org.junit.Assert.assertEquals("<p>test</p> <div></div> <div> Two </div>", org.jsoup.helper.StringUtil.normaliseWhitespace(clean));
}
@org.junit.Test(timeout = 120000)
public void selfClosingOnNonvoidIsError_Ex2_JBSE379() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(5);
    parser.parseInput(html, "");
    org.junit.Assert.assertEquals(1, parser.getErrors().size());
    org.junit.Assert.assertEquals("18: Tag cannot be self closing; not a void tag", parser.getErrors().get(0).toString());
    org.junit.Assert.assertFalse(org.jsoup.Jsoup.isValid(html, org.jsoup.safety.Whitelist.relaxed()));
    java.lang.String clean = org.jsoup.Jsoup.clean(html, org.jsoup.safety.Whitelist.relaxed());
    org.junit.Assert.assertEquals("<p>test</p> <div></div> <div> Two </div>", org.jsoup.helper.StringUtil.normaliseWhitespace(clean));
}
@org.junit.Test(timeout = 120000)
public void selfClosingOnNonvoidIsError_Ex2_JBSE380() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(5);
    parser.parseInput(html, "");
    org.junit.Assert.assertEquals(1, parser.getErrors().size());
    org.junit.Assert.assertEquals("18: Tag cannot be self closing; not a void tag", parser.getErrors().get(0).toString());
    org.junit.Assert.assertFalse(org.jsoup.Jsoup.isValid(html, org.jsoup.safety.Whitelist.relaxed()));
    java.lang.String clean = org.jsoup.Jsoup.clean(html, org.jsoup.safety.Whitelist.relaxed());
    org.junit.Assert.assertEquals("<p>test</p> <div></div> <div> Two </div>", org.jsoup.helper.StringUtil.normaliseWhitespace(clean));
}
@org.junit.Test(timeout = 120000)
public void selfClosingOnNonvoidIsError_Ex2_JBSE381() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(5);
    parser.parseInput(html, "");
    org.junit.Assert.assertEquals(1, parser.getErrors().size());
    org.junit.Assert.assertEquals("18: Tag cannot be self closing; not a void tag", parser.getErrors().get(0).toString());
    org.junit.Assert.assertFalse(org.jsoup.Jsoup.isValid(html, org.jsoup.safety.Whitelist.relaxed()));
    java.lang.String clean = org.jsoup.Jsoup.clean(html, org.jsoup.safety.Whitelist.relaxed());
    org.junit.Assert.assertEquals("<p>test</p> <div></div> <div> Two </div>", org.jsoup.helper.StringUtil.normaliseWhitespace(clean));
}
@org.junit.Test(timeout = 120000)
public void selfClosingOnNonvoidIsError_Ex2_JBSE382() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(5);
    parser.parseInput(html, "");
    org.junit.Assert.assertEquals(1, parser.getErrors().size());
    org.junit.Assert.assertEquals("18: Tag cannot be self closing; not a void tag", parser.getErrors().get(0).toString());
    org.junit.Assert.assertFalse(org.jsoup.Jsoup.isValid(html, org.jsoup.safety.Whitelist.relaxed()));
    java.lang.String clean = org.jsoup.Jsoup.clean(html, org.jsoup.safety.Whitelist.relaxed());
    org.junit.Assert.assertEquals("<p>test</p> <div></div> <div> Two </div>", org.jsoup.helper.StringUtil.normaliseWhitespace(clean));
}
@org.junit.Test(timeout = 120000)
public void selfClosingOnNonvoidIsError_Ex2_JBSE383() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(5);
    parser.parseInput(html, "");
    org.junit.Assert.assertEquals(1, parser.getErrors().size());
    org.junit.Assert.assertEquals("18: Tag cannot be self closing; not a void tag", parser.getErrors().get(0).toString());
    org.junit.Assert.assertFalse(org.jsoup.Jsoup.isValid(html, org.jsoup.safety.Whitelist.relaxed()));
    java.lang.String clean = org.jsoup.Jsoup.clean(html, org.jsoup.safety.Whitelist.relaxed());
    org.junit.Assert.assertEquals("<p>test</p> <div></div> <div> Two </div>", org.jsoup.helper.StringUtil.normaliseWhitespace(clean));
}
@org.junit.Test(timeout = 120000)
public void selfClosingOnNonvoidIsError_Ex2_JBSE384() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(5);
    parser.parseInput(html, "");
    org.junit.Assert.assertEquals(1, parser.getErrors().size());
    org.junit.Assert.assertEquals("18: Tag cannot be self closing; not a void tag", parser.getErrors().get(0).toString());
    org.junit.Assert.assertFalse(org.jsoup.Jsoup.isValid(html, org.jsoup.safety.Whitelist.relaxed()));
    java.lang.String clean = org.jsoup.Jsoup.clean(html, org.jsoup.safety.Whitelist.relaxed());
    org.junit.Assert.assertEquals("<p>test</p> <div></div> <div> Two </div>", org.jsoup.helper.StringUtil.normaliseWhitespace(clean));
}
@org.junit.Test(timeout = 120000)
public void selfClosingOnNonvoidIsError_Ex2_JBSE385() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(5);
    parser.parseInput(html, "");
    org.junit.Assert.assertEquals(1, parser.getErrors().size());
    org.junit.Assert.assertEquals("18: Tag cannot be self closing; not a void tag", parser.getErrors().get(0).toString());
    org.junit.Assert.assertFalse(org.jsoup.Jsoup.isValid(html, org.jsoup.safety.Whitelist.relaxed()));
    java.lang.String clean = org.jsoup.Jsoup.clean(html, org.jsoup.safety.Whitelist.relaxed());
    org.junit.Assert.assertEquals("<p>test</p> <div></div> <div> Two </div>", org.jsoup.helper.StringUtil.normaliseWhitespace(clean));
}