@org.junit.Test(timeout = 120000)
public void tracksErrorsWhenRequested_Ex2_JBSE356() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(500);
    org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(html, "http://example.com", parser);
    java.util.List<org.jsoup.parser.ParseError> errors = parser.getErrors();
    org.junit.Assert.assertEquals(5, errors.size());
    org.junit.Assert.assertEquals("20: Attributes incorrectly present on end tag", errors.get(0).toString());
    org.junit.Assert.assertEquals("35: Unexpected token [Doctype] when in state [InBody]", errors.get(1).toString());
    org.junit.Assert.assertEquals("36: Invalid character reference: invalid named referenece 'arrgh'", errors.get(2).toString());
    org.junit.Assert.assertEquals("50: Tag cannot be self closing; not a void tag", errors.get(3).toString());
    org.junit.Assert.assertEquals("61: Unexpectedly reached end of file (EOF) in input state [TagName]", errors.get(4).toString());
}
@org.junit.Test(timeout = 120000)
public void tracksErrorsWhenRequested_Ex2_JBSE357() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(500);
    org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(html, "http://example.com", parser);
    java.util.List<org.jsoup.parser.ParseError> errors = parser.getErrors();
    org.junit.Assert.assertEquals(5, errors.size());
    org.junit.Assert.assertEquals("20: Attributes incorrectly present on end tag", errors.get(0).toString());
    org.junit.Assert.assertEquals("35: Unexpected token [Doctype] when in state [InBody]", errors.get(1).toString());
    org.junit.Assert.assertEquals("36: Invalid character reference: invalid named referenece 'arrgh'", errors.get(2).toString());
    org.junit.Assert.assertEquals("50: Tag cannot be self closing; not a void tag", errors.get(3).toString());
    org.junit.Assert.assertEquals("61: Unexpectedly reached end of file (EOF) in input state [TagName]", errors.get(4).toString());
}
@org.junit.Test(timeout = 120000)
public void tracksErrorsWhenRequested_Ex2_JBSE358() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(500);
    org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(html, "http://example.com", parser);
    java.util.List<org.jsoup.parser.ParseError> errors = parser.getErrors();
    org.junit.Assert.assertEquals(5, errors.size());
    org.junit.Assert.assertEquals("20: Attributes incorrectly present on end tag", errors.get(0).toString());
    org.junit.Assert.assertEquals("35: Unexpected token [Doctype] when in state [InBody]", errors.get(1).toString());
    org.junit.Assert.assertEquals("36: Invalid character reference: invalid named referenece 'arrgh'", errors.get(2).toString());
    org.junit.Assert.assertEquals("50: Tag cannot be self closing; not a void tag", errors.get(3).toString());
    org.junit.Assert.assertEquals("61: Unexpectedly reached end of file (EOF) in input state [TagName]", errors.get(4).toString());
}
@org.junit.Test(timeout = 120000)
public void tracksErrorsWhenRequested_Ex2_JBSE359() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(500);
    org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(html, "http://example.com", parser);
    java.util.List<org.jsoup.parser.ParseError> errors = parser.getErrors();
    org.junit.Assert.assertEquals(5, errors.size());
    org.junit.Assert.assertEquals("20: Attributes incorrectly present on end tag", errors.get(0).toString());
    org.junit.Assert.assertEquals("35: Unexpected token [Doctype] when in state [InBody]", errors.get(1).toString());
    org.junit.Assert.assertEquals("36: Invalid character reference: invalid named referenece 'arrgh'", errors.get(2).toString());
    org.junit.Assert.assertEquals("50: Tag cannot be self closing; not a void tag", errors.get(3).toString());
    org.junit.Assert.assertEquals("61: Unexpectedly reached end of file (EOF) in input state [TagName]", errors.get(4).toString());
}
@org.junit.Test(timeout = 120000)
public void tracksErrorsWhenRequested_Ex2_JBSE360() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(500);
    org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(html, "http://example.com", parser);
    java.util.List<org.jsoup.parser.ParseError> errors = parser.getErrors();
    org.junit.Assert.assertEquals(5, errors.size());
    org.junit.Assert.assertEquals("20: Attributes incorrectly present on end tag", errors.get(0).toString());
    org.junit.Assert.assertEquals("35: Unexpected token [Doctype] when in state [InBody]", errors.get(1).toString());
    org.junit.Assert.assertEquals("36: Invalid character reference: invalid named referenece 'arrgh'", errors.get(2).toString());
    org.junit.Assert.assertEquals("50: Tag cannot be self closing; not a void tag", errors.get(3).toString());
    org.junit.Assert.assertEquals("61: Unexpectedly reached end of file (EOF) in input state [TagName]", errors.get(4).toString());
}
@org.junit.Test(timeout = 120000)
public void tracksErrorsWhenRequested_Ex2_JBSE361() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(500);
    org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(html, "http://example.com", parser);
    java.util.List<org.jsoup.parser.ParseError> errors = parser.getErrors();
    org.junit.Assert.assertEquals(5, errors.size());
    org.junit.Assert.assertEquals("20: Attributes incorrectly present on end tag", errors.get(0).toString());
    org.junit.Assert.assertEquals("35: Unexpected token [Doctype] when in state [InBody]", errors.get(1).toString());
    org.junit.Assert.assertEquals("36: Invalid character reference: invalid named referenece 'arrgh'", errors.get(2).toString());
    org.junit.Assert.assertEquals("50: Tag cannot be self closing; not a void tag", errors.get(3).toString());
    org.junit.Assert.assertEquals("61: Unexpectedly reached end of file (EOF) in input state [TagName]", errors.get(4).toString());
}
@org.junit.Test(timeout = 120000)
public void tracksErrorsWhenRequested_Ex2_JBSE362() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(500);
    org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(html, "http://example.com", parser);
    java.util.List<org.jsoup.parser.ParseError> errors = parser.getErrors();
    org.junit.Assert.assertEquals(5, errors.size());
    org.junit.Assert.assertEquals("20: Attributes incorrectly present on end tag", errors.get(0).toString());
    org.junit.Assert.assertEquals("35: Unexpected token [Doctype] when in state [InBody]", errors.get(1).toString());
    org.junit.Assert.assertEquals("36: Invalid character reference: invalid named referenece 'arrgh'", errors.get(2).toString());
    org.junit.Assert.assertEquals("50: Tag cannot be self closing; not a void tag", errors.get(3).toString());
    org.junit.Assert.assertEquals("61: Unexpectedly reached end of file (EOF) in input state [TagName]", errors.get(4).toString());
}
@org.junit.Test(timeout = 120000)
public void tracksErrorsWhenRequested_Ex2_JBSE363() throws java.lang.Exception {
    java.lang.String html = 0;
    org.jsoup.parser.Parser parser = org.jsoup.parser.Parser.htmlParser().setTrackErrors(500);
    org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(html, "http://example.com", parser);
    java.util.List<org.jsoup.parser.ParseError> errors = parser.getErrors();
    org.junit.Assert.assertEquals(5, errors.size());
    org.junit.Assert.assertEquals("20: Attributes incorrectly present on end tag", errors.get(0).toString());
    org.junit.Assert.assertEquals("35: Unexpected token [Doctype] when in state [InBody]", errors.get(1).toString());
    org.junit.Assert.assertEquals("36: Invalid character reference: invalid named referenece 'arrgh'", errors.get(2).toString());
    org.junit.Assert.assertEquals("50: Tag cannot be self closing; not a void tag", errors.get(3).toString());
    org.junit.Assert.assertEquals("61: Unexpectedly reached end of file (EOF) in input state [TagName]", errors.get(4).toString());
}