package io.protostuff.parser;


import java.io.File;
import java.io.IOException;
import java.net.URL;
import org.junit.Assert;
import org.junit.Test;


public class AmplProtoParserTest {
    static URL getResource(String path) throws IOException {
        return Thread.currentThread().getContextClassLoader().getResource(path);
    }

    static File getFile(String path) {
        return new File(new File("src/test/resources"), path);
    }

    @Test(timeout = 120000)
    public void testDescriptorProto() throws Exception {
        File f = AmplProtoParserTest.getFile("descriptor.proto");
        f.exists();
        Proto proto = new Proto(f);
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getServiceMap().isEmpty());
        Assert.assertEquals(1550041671, ((int) (((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).hashCode())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).mkdir());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getMessages().isEmpty());
        Assert.assertEquals("", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getHost());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsolutePath());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).isHidden());
        Assert.assertEquals(1527142646000L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).lastModified())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).mkdirs());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getParent());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMutablePackageName());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getAnnotationMap().isEmpty());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getPath());
        Assert.assertEquals(1154019134, ((int) (((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).hashCode())));
        Assert.assertEquals("descriptor.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getName());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).isHidden());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).isEmptyA());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).isHidden());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getServiceMap().isEmpty());
        Assert.assertEquals(227478868, ((int) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).hashCode())));
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getO().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getImportedProtos().isEmpty());
        Assert.assertEquals(-1244353054, ((int) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).hashCode())));
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getOptions().isEmpty());
        Assert.assertEquals("descriptor.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getName());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getEnumGroupMap().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).canExecute());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getPath());
        Assert.assertNull(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).listFiles());
        Assert.assertEquals("descriptor.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getName());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).isAbsolute());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).isEmptyA());
        Assert.assertEquals(0L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getFreeSpace())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getCanonicalPath());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).isDirectory());
        Assert.assertEquals("src/test/resources/descriptor.proto", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getSourcePath());
        Assert.assertEquals("src/test/resources/descriptor.proto", ((io.protostuff.parser.Proto)proto).getSourcePath());
        Assert.assertFalse(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).isOpaque());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).exists());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).mkdir());
        Assert.assertEquals("file", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getProtocol());
        Assert.assertEquals("file:/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).toString());
        Assert.assertNull(((io.protostuff.parser.Proto)proto).getPackageName());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getPath());
        Assert.assertFalse(((io.protostuff.parser.Proto)proto).getError().isEmpty());
        Assert.assertEquals(227478868, ((int) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).hashCode())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).mkdirs());
        Assert.assertEquals(0L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getTotalSpace())));
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getAnnotations().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).isAbsolute());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getSchemeSpecificPart());
        Assert.assertNull(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).list());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).isHidden());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getAbsolutePath());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getA().isEmpty());
        Assert.assertEquals(242106613760L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getTotalSpace())));
        Assert.assertEquals(0L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).lastModified())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawSchemeSpecificPart());
        Assert.assertEquals("src/test/resources/descriptor.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).toString());
        Assert.assertNull(((io.protostuff.parser.Proto)proto).getOriginalPackageName());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getMutablePackageName());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).mkdirs());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).exists());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getExtensions().isEmpty());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).setReadOnly());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).canRead());
        Assert.assertEquals(0L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getUsableSpace())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getCanonicalPath());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getCanonicalPath());
        Assert.assertEquals(-1, ((int) (((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getPort())));
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getMessageMap().isEmpty());
        Assert.assertEquals(66901098496L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getUsableSpace())));
        Assert.assertEquals(4096L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).length())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getCanonicalPath());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getParent());
        Assert.assertEquals(0L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).length())));
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).canExecute());
        Assert.assertEquals("descriptor.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getName());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getUserInfo());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).canWrite());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).isAbsolute());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawPath());
        Assert.assertNull(((io.protostuff.parser.Proto)proto).getMutableJavaPackageName());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).delete());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getExtraOptions().isEmpty());
        Assert.assertEquals("src/test/resources", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParent());
        Assert.assertNull(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).list());
        Assert.assertNull(((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getRef());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).canWrite());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).toString());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).isFile());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getExtensions().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getStandardOptions().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getServiceMap().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMessageMap().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).mkdir());
        Assert.assertEquals("", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getAuthority());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getAnnotations().isEmpty());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getFragment());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getMessages().isEmpty());
        Assert.assertEquals(0L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getUsableSpace())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).isFile());
        Assert.assertEquals("src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).toString());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getOriginalJavaPackageName());
        Assert.assertEquals(0L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getFreeSpace())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalPath());
        Assert.assertEquals(4, ((int) (((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).getNameCount())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).exists());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).isDirectory());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).exists());
        Assert.assertEquals(-1, ((int) (((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getPort())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).isDirectory());
        Assert.assertEquals(-1, ((int) (((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getDefaultPort())));
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getMessageMap().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).setReadOnly());
        Assert.assertEquals("src/test/resources/descriptor.proto", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getSourcePath());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getEnumGroups().isEmpty());
        Assert.assertNull(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).list());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).canWrite());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getOriginalPackageName());
        Assert.assertEquals(0L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getTotalSpace())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).isHidden());
        Assert.assertEquals("file:/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).toExternalForm());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getImportedProtos().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).mkdir());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).canWrite());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).isFile());
        Assert.assertEquals(0L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).lastModified())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).setReadOnly());
        Assert.assertEquals(0L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getTotalSpace())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).setReadOnly());
        Assert.assertEquals(0L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getUsableSpace())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).isFile());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getExtensions().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).mkdirs());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).isAbsolute());
        Assert.assertTrue(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).isAbsolute());
        Assert.assertNull(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).listFiles());
        Assert.assertNull(((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getUserInfo());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getEnumGroups().isEmpty());
        Assert.assertEquals(0L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getUsableSpace())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getAbsolutePath());
        Assert.assertNull(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).listFiles());
        Assert.assertEquals("file", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getScheme());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getEnumGroupMap().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getO().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).createNewFile());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawQuery());
        Assert.assertEquals(1149906002, ((int) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).hashCode())));
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getStandardOptions().isEmpty());
        Assert.assertEquals("{packageName:null,standardOptions:{},extraOptions:{},messages:[]}", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).toString());
        Assert.assertEquals(228448453, ((int) (((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).hashCode())));
        Assert.assertEquals(0L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).length())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getFile());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getError().isEmpty());
        Assert.assertEquals(0L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getFreeSpace())));
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getServices().isEmpty());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getOriginalJavaPackageName());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawUserInfo());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getAuthority());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).isDirectory());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).canExecute());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getPath());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).canRead());
        Assert.assertEquals("resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getName());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).delete());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getAnnotationMap().isEmpty());
        Assert.assertEquals(0L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).length())));
        Assert.assertNull(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).listFiles());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getExtraOptions().isEmpty());
        Assert.assertEquals(79270780928L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getFreeSpace())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).canExecute());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getPackageName());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).canRead());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).canRead());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getHost());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getStandardOptions().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMessages().isEmpty());
        Assert.assertEquals("src/test/resources/descriptor.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getPath());
        Assert.assertNull(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).list());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).delete());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).exists());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getA().isEmpty());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getQuery());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).mkdirs());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getOptions().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getOptions().isEmpty());
        Assert.assertNull(((io.protostuff.parser.Proto)proto).getOriginalJavaPackageName());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getMutableJavaPackageName());
        Assert.assertNull(((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getQuery());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getError().isEmpty());
        Assert.assertEquals(0L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).length())));
        Assert.assertEquals(0L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getFreeSpace())));
        Assert.assertEquals(1149906002, ((int) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).hashCode())));
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getImportedProtos().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getEnumGroupMap().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).isEmptyA());
        Assert.assertEquals("file:/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).toString());
        Assert.assertEquals("src/test", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getParent());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).setReadOnly());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).isAbsolute());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getServices().isEmpty());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).mkdir());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getO().isEmpty());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getAbsolutePath());
        Assert.assertEquals("src/test/resources/descriptor.proto", ((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).toString());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getExtraOptions().isEmpty());
        Assert.assertNull(((io.protostuff.parser.Proto)proto).getMutablePackageName());
        Assert.assertEquals("src/test/resources/descriptor.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toString());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getEnumGroups().isEmpty());
        Assert.assertEquals("{packageName:null,standardOptions:{},extraOptions:{},messages:[]}", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).toString());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getOriginalPackageName());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getA().isEmpty());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMutableJavaPackageName());
        Assert.assertFalse(((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).isAbsolute());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).isFile());
        Assert.assertNull(((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).getRoot());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getAnnotationMap().isEmpty());
        Assert.assertEquals("{packageName:null,standardOptions:{},extraOptions:{},messages:[]}", ((io.protostuff.parser.Proto)proto).toString());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).delete());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getAbsolutePath());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getServices().isEmpty());
        Assert.assertEquals(0L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).lastModified())));
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).isDirectory());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).canExecute());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getPackageName());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).canRead());
        Assert.assertEquals(0L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).lastModified())));
        Assert.assertEquals("file:/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).toASCIIString());
        Assert.assertEquals(0L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getTotalSpace())));
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawFragment());
        Assert.assertEquals("src/test/resources/descriptor.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getPath());
        Assert.assertEquals("src/test/resources", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getParent());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawAuthority());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/descriptor.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).toString());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).canWrite());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getAnnotations().isEmpty());
        Assert.assertEquals("src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getPath());
        ProtoUtil.loadFrom(f, proto);
        proto.getPackageName();
    }

    @Test(timeout = 120000)
    public void testEnumWithTrailingSemicolon() throws Exception {
        File f = AmplProtoParserTest.getFile("enum_with_semicolon.proto");
        boolean o_testEnumWithTrailingSemicolon__3 = f.exists();
        Assert.assertTrue(o_testEnumWithTrailingSemicolon__3);
        Proto proto = new Proto(f);
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getServiceMap().isEmpty());
        Assert.assertEquals(-781925350, ((int) (((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).hashCode())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).mkdir());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getMessages().isEmpty());
        Assert.assertEquals("", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getHost());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsolutePath());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).isHidden());
        Assert.assertEquals(1527142646000L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).lastModified())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).mkdirs());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getParent());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMutablePackageName());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getAnnotationMap().isEmpty());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getPath());
        Assert.assertEquals(-1177947887, ((int) (((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).hashCode())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).createNewFile());
        Assert.assertEquals("enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getName());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).isHidden());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).isEmptyA());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).isHidden());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getServiceMap().isEmpty());
        Assert.assertEquals(-1222636731, ((int) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).hashCode())));
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getO().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getImportedProtos().isEmpty());
        Assert.assertEquals(-1244353054, ((int) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).hashCode())));
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getOptions().isEmpty());
        Assert.assertEquals("enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getName());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getEnumGroupMap().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).canExecute());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getPath());
        Assert.assertNull(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).listFiles());
        Assert.assertEquals("enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getName());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).isAbsolute());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).isEmptyA());
        Assert.assertEquals(79270780928L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getFreeSpace())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getCanonicalPath());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).isDirectory());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getSourcePath());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((io.protostuff.parser.Proto)proto).getSourcePath());
        Assert.assertFalse(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).isOpaque());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).exists());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).mkdir());
        Assert.assertEquals("file", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getProtocol());
        Assert.assertEquals("file:/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).toString());
        Assert.assertNull(((io.protostuff.parser.Proto)proto).getPackageName());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getPath());
        Assert.assertFalse(((io.protostuff.parser.Proto)proto).getError().isEmpty());
        Assert.assertEquals(-1222636731, ((int) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).hashCode())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).mkdirs());
        Assert.assertEquals(242106613760L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getTotalSpace())));
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getAnnotations().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).isAbsolute());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getSchemeSpecificPart());
        Assert.assertNull(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).list());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).isHidden());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getAbsolutePath());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getA().isEmpty());
        Assert.assertEquals(242106613760L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getTotalSpace())));
        Assert.assertEquals(1526395844000L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).lastModified())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawSchemeSpecificPart());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).toString());
        Assert.assertNull(((io.protostuff.parser.Proto)proto).getOriginalPackageName());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getMutablePackageName());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).mkdirs());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).exists());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getExtensions().isEmpty());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).setReadOnly());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).canRead());
        Assert.assertEquals(66901098496L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getUsableSpace())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getCanonicalPath());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getCanonicalPath());
        Assert.assertEquals(-1, ((int) (((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getPort())));
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getMessageMap().isEmpty());
        Assert.assertEquals(66901098496L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getUsableSpace())));
        Assert.assertEquals(4096L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).length())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getCanonicalPath());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getParent());
        Assert.assertEquals(519L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).length())));
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).canExecute());
        Assert.assertEquals("enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getName());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getUserInfo());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).canWrite());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).isAbsolute());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawPath());
        Assert.assertNull(((io.protostuff.parser.Proto)proto).getMutableJavaPackageName());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).delete());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getExtraOptions().isEmpty());
        Assert.assertEquals("src/test/resources", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParent());
        Assert.assertNull(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).list());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).createNewFile());
        Assert.assertNull(((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getRef());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).canWrite());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).toString());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).isFile());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getExtensions().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getStandardOptions().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getServiceMap().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMessageMap().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).mkdir());
        Assert.assertEquals("", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getAuthority());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getAnnotations().isEmpty());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getFragment());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getMessages().isEmpty());
        Assert.assertEquals(66901098496L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getUsableSpace())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).isFile());
        Assert.assertEquals("src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).toString());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getOriginalJavaPackageName());
        Assert.assertEquals(79270780928L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getFreeSpace())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalPath());
        Assert.assertEquals(4, ((int) (((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).getNameCount())));
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).exists());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).isDirectory());
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).exists());
        Assert.assertEquals(-1, ((int) (((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getPort())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).isDirectory());
        Assert.assertEquals(-1, ((int) (((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getDefaultPort())));
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getMessageMap().isEmpty());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).setReadOnly());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getSourcePath());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getEnumGroups().isEmpty());
        Assert.assertNull(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).list());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).canWrite());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getOriginalPackageName());
        Assert.assertEquals(242106613760L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getTotalSpace())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).isHidden());
        Assert.assertEquals("file:/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).toExternalForm());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getImportedProtos().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).mkdir());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).canWrite());
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).isFile());
        Assert.assertEquals(1526395844000L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).lastModified())));
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).setReadOnly());
        Assert.assertEquals(242106613760L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getTotalSpace())));
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).setReadOnly());
        Assert.assertEquals(66901098496L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getUsableSpace())));
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).isFile());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getExtensions().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).mkdirs());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).isAbsolute());
        Assert.assertTrue(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).isAbsolute());
        Assert.assertNull(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).listFiles());
        Assert.assertNull(((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getUserInfo());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getEnumGroups().isEmpty());
        Assert.assertEquals(66901098496L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getUsableSpace())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getAbsolutePath());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).createNewFile());
        Assert.assertNull(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).listFiles());
        Assert.assertEquals("file", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getScheme());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getEnumGroupMap().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getO().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).createNewFile());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawQuery());
        Assert.assertEquals(-1182061049, ((int) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).hashCode())));
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getStandardOptions().isEmpty());
        Assert.assertEquals("{packageName:null,standardOptions:{},extraOptions:{},messages:[]}", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).toString());
        Assert.assertEquals(-1221402924, ((int) (((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).hashCode())));
        Assert.assertEquals(519L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).length())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getFile());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getError().isEmpty());
        Assert.assertEquals(79270780928L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getFreeSpace())));
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getServices().isEmpty());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getOriginalJavaPackageName());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawUserInfo());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getAuthority());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).isDirectory());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).canExecute());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getPath());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).canRead());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).delete());
        Assert.assertEquals("resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getName());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).delete());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getAnnotationMap().isEmpty());
        Assert.assertEquals(519L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).length())));
        Assert.assertNull(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).listFiles());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getExtraOptions().isEmpty());
        Assert.assertEquals(79270780928L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getFreeSpace())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).canExecute());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getPackageName());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).canRead());
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).canRead());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getHost());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getStandardOptions().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMessages().isEmpty());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getPath());
        Assert.assertNull(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).list());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).delete());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).exists());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getA().isEmpty());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getQuery());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).mkdirs());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getOptions().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getOptions().isEmpty());
        Assert.assertNull(((io.protostuff.parser.Proto)proto).getOriginalJavaPackageName());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getMutableJavaPackageName());
        Assert.assertNull(((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getQuery());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getError().isEmpty());
        Assert.assertEquals(519L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).length())));
        Assert.assertEquals(79270780928L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getFreeSpace())));
        Assert.assertEquals(-1182061049, ((int) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).hashCode())));
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getImportedProtos().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getEnumGroupMap().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).isEmptyA());
        Assert.assertEquals("file:/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).toString());
        Assert.assertEquals("src/test", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getParent());
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).setReadOnly());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).isAbsolute());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getServices().isEmpty());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).mkdir());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getO().isEmpty());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getAbsolutePath());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).toString());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getExtraOptions().isEmpty());
        Assert.assertNull(((io.protostuff.parser.Proto)proto).getMutablePackageName());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toString());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getEnumGroups().isEmpty());
        Assert.assertEquals("{packageName:null,standardOptions:{},extraOptions:{},messages:[]}", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).toString());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getOriginalPackageName());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getA().isEmpty());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMutableJavaPackageName());
        Assert.assertFalse(((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).isAbsolute());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).isFile());
        Assert.assertNull(((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).getRoot());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getAnnotationMap().isEmpty());
        Assert.assertEquals("{packageName:null,standardOptions:{},extraOptions:{},messages:[]}", ((io.protostuff.parser.Proto)proto).toString());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).delete());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getAbsolutePath());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getServices().isEmpty());
        Assert.assertEquals(1526395844000L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).lastModified())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).createNewFile());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).isDirectory());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).canExecute());
        Assert.assertNull(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getPackageName());
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).canRead());
        Assert.assertEquals(1526395844000L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).lastModified())));
        Assert.assertEquals("file:/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).toASCIIString());
        Assert.assertEquals(242106613760L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getTotalSpace())));
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawFragment());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getPath());
        Assert.assertEquals("src/test/resources", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getParent());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawAuthority());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).toString());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).canWrite());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getAnnotations().isEmpty());
        Assert.assertEquals("src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getPath());
        ProtoUtil.loadFrom(f, proto);
        proto.getPackageName();
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getServiceMap().isEmpty());
        Assert.assertEquals(-781925350, ((int) (((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).hashCode())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).mkdir());
        Assert.assertFalse(((io.protostuff.parser.Proto)proto).getMessages().isEmpty());
        Assert.assertEquals("", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getHost());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsolutePath());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).isHidden());
        Assert.assertEquals(1527142646000L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).lastModified())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).mkdirs());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getParent());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getAnnotationMap().isEmpty());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getPath());
        Assert.assertEquals(-1177947887, ((int) (((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).hashCode())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).createNewFile());
        Assert.assertEquals("enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getName());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Mutable)((io.protostuff.parser.Proto)proto).getMutableJavaPackageName()).getValue());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).isHidden());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).isEmptyA());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).isHidden());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getServiceMap().isEmpty());
        Assert.assertEquals(-1222636731, ((int) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).hashCode())));
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getO().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getImportedProtos().isEmpty());
        Assert.assertEquals(-1244353054, ((int) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).hashCode())));
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getOptions().isEmpty());
        Assert.assertEquals("enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getName());
        Assert.assertFalse(((io.protostuff.parser.Proto)proto).getEnumGroupMap().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).canExecute());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getPath());
        Assert.assertNull(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).listFiles());
        Assert.assertEquals("enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getName());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).isAbsolute());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).isEmptyA());
        Assert.assertEquals(79270780928L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getFreeSpace())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getCanonicalPath());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).isDirectory());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getSourcePath());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((io.protostuff.parser.Proto)proto).getSourcePath());
        Assert.assertFalse(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).isOpaque());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).exists());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).mkdir());
        Assert.assertEquals("file", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getProtocol());
        Assert.assertEquals("file:/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).toString());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Proto)proto).getPackageName());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getPath());
        Assert.assertFalse(((io.protostuff.parser.Proto)proto).getError().isEmpty());
        Assert.assertEquals(-1222636731, ((int) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).hashCode())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).mkdirs());
        Assert.assertEquals(242106613760L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getTotalSpace())));
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getAnnotations().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).isAbsolute());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getSchemeSpecificPart());
        Assert.assertNull(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).list());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).isHidden());
        Assert.assertNull(((io.protostuff.parser.Mutable)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMutablePackageName()).getLast());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getAbsolutePath());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getA().isEmpty());
        Assert.assertEquals(242106613760L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getTotalSpace())));
        Assert.assertEquals(1526395844000L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).lastModified())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawSchemeSpecificPart());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).toString());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Proto)proto).getOriginalPackageName());
        Assert.assertFalse(((io.protostuff.parser.Mutable)((io.protostuff.parser.Proto)proto).getMutablePackageName()).isOverridden());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).mkdirs());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).exists());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getExtensions().isEmpty());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).setReadOnly());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).canRead());
        Assert.assertEquals(66901098496L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getUsableSpace())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getCanonicalPath());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getCanonicalPath());
        Assert.assertEquals(-1, ((int) (((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getPort())));
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getMessageMap().isEmpty());
        Assert.assertEquals(66901098496L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getUsableSpace())));
        Assert.assertEquals(4096L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).length())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getCanonicalPath());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getParent());
        Assert.assertEquals(519L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).length())));
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).canExecute());
        Assert.assertEquals("enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getName());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getUserInfo());
        Assert.assertFalse(((io.protostuff.parser.Mutable)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMutableJavaPackageName()).isOverridden());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).canWrite());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).isAbsolute());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawPath());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).delete());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getExtraOptions().isEmpty());
        Assert.assertEquals("src/test/resources", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParent());
        Assert.assertNull(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).list());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).createNewFile());
        Assert.assertNull(((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getRef());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).canWrite());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).toString());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).isFile());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getExtensions().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getStandardOptions().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getServiceMap().isEmpty());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMessageMap().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).mkdir());
        Assert.assertEquals("", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getAuthority());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getAnnotations().isEmpty());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getFragment());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getMessages().isEmpty());
        Assert.assertEquals(66901098496L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getUsableSpace())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).isFile());
        Assert.assertEquals("src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).toString());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getOriginalJavaPackageName());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Mutable)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMutableJavaPackageName()).getValue());
        Assert.assertEquals(79270780928L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getFreeSpace())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalPath());
        Assert.assertEquals(4, ((int) (((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).getNameCount())));
        Assert.assertEquals("rpc", ((io.protostuff.parser.Mutable)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMutablePackageName()).getValue());
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).exists());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).isDirectory());
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).exists());
        Assert.assertEquals(-1, ((int) (((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getPort())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).isDirectory());
        Assert.assertEquals(-1, ((int) (((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getDefaultPort())));
        Assert.assertFalse(((io.protostuff.parser.Proto)proto).getMessageMap().isEmpty());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).setReadOnly());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Mutable)((io.protostuff.parser.Proto)proto).getMutablePackageName()).getValue());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getSourcePath());
        Assert.assertFalse(((io.protostuff.parser.Proto)proto).getEnumGroups().isEmpty());
        Assert.assertNull(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).list());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).canWrite());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getOriginalPackageName());
        Assert.assertEquals(242106613760L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).getTotalSpace())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).isHidden());
        Assert.assertEquals("file:/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).toExternalForm());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getImportedProtos().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).mkdir());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).canWrite());
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).isFile());
        Assert.assertEquals(1526395844000L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).lastModified())));
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).setReadOnly());
        Assert.assertEquals(242106613760L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getTotalSpace())));
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).setReadOnly());
        Assert.assertEquals(66901098496L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getUsableSpace())));
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).isFile());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getExtensions().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).mkdirs());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).isAbsolute());
        Assert.assertTrue(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).isAbsolute());
        Assert.assertNull(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).listFiles());
        Assert.assertNull(((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getUserInfo());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getEnumGroups().isEmpty());
        Assert.assertEquals(66901098496L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getUsableSpace())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getAbsolutePath());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).createNewFile());
        Assert.assertNull(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).listFiles());
        Assert.assertEquals("file", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getScheme());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getEnumGroupMap().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getO().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).createNewFile());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawQuery());
        Assert.assertEquals(-1182061049, ((int) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).hashCode())));
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getStandardOptions().isEmpty());
        Assert.assertNull(((io.protostuff.parser.Mutable)((io.protostuff.parser.Proto)proto).getMutableJavaPackageName()).getLast());
        Assert.assertEquals(-1221402924, ((int) (((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).hashCode())));
        Assert.assertEquals(519L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).length())));
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getFile());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getError().isEmpty());
        Assert.assertEquals(79270780928L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getFreeSpace())));
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getServices().isEmpty());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getOriginalJavaPackageName());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawUserInfo());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getAuthority());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).isDirectory());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).canExecute());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getPath());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).canRead());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).delete());
        Assert.assertEquals("resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getName());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).delete());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getAnnotationMap().isEmpty());
        Assert.assertEquals(519L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).length())));
        Assert.assertNull(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).listFiles());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getExtraOptions().isEmpty());
        Assert.assertNull(((io.protostuff.parser.Mutable)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMutableJavaPackageName()).getLast());
        Assert.assertEquals(79270780928L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getFreeSpace())));
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).canExecute());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getPackageName());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).canRead());
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).canRead());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getHost());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getStandardOptions().isEmpty());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMessages().isEmpty());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getPath());
        Assert.assertNull(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).list());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).delete());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).exists());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getA().isEmpty());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getQuery());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).mkdirs());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getJavaPackageName());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getOptions().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getOptions().isEmpty());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Proto)proto).getOriginalJavaPackageName());
        Assert.assertNull(((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).getQuery());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getError().isEmpty());
        Assert.assertEquals(519L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).length())));
        Assert.assertEquals(79270780928L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getFreeSpace())));
        Assert.assertEquals(-1182061049, ((int) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).hashCode())));
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getImportedProtos().isEmpty());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getEnumGroupMap().isEmpty());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).isEmptyA());
        Assert.assertEquals("file:/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URL)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURL()).toString());
        Assert.assertEquals("src/test", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getParent());
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).setReadOnly());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getJavaPackageName());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).isAbsolute());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getServices().isEmpty());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).mkdir());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getO().isEmpty());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getAbsolutePath());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).toString());
        Assert.assertTrue(((io.protostuff.parser.Proto)proto).getExtraOptions().isEmpty());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toString());
        Assert.assertFalse(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getEnumGroups().isEmpty());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getOriginalPackageName());
        Assert.assertFalse(((io.protostuff.parser.Mutable)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getMutablePackageName()).isOverridden());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getA().isEmpty());
        Assert.assertFalse(((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).isAbsolute());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).isFile());
        Assert.assertNull(((java.nio.file.Path)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toPath()).getRoot());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getProto()).getAnnotationMap().isEmpty());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).delete());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getAbsolutePath());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getServices().isEmpty());
        Assert.assertEquals(1526395844000L, ((long) (((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).lastModified())));
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).createNewFile());
        Assert.assertTrue(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).isDirectory());
        Assert.assertFalse(((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).canExecute());
        Assert.assertEquals("rpc", ((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getPackageName());
        Assert.assertTrue(((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).canRead());
        Assert.assertEquals(1526395844000L, ((long) (((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).lastModified())));
        Assert.assertEquals("rpc", ((io.protostuff.parser.Proto)proto).getJavaPackageName());
        Assert.assertEquals("file:/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).toASCIIString());
        Assert.assertEquals(242106613760L, ((long) (((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).getTotalSpace())));
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawFragment());
        Assert.assertEquals("src/test/resources/enum_with_semicolon.proto", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getPath());
        Assert.assertEquals("src/test/resources", ((java.io.File)((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getFile()).getParent());
        Assert.assertNull(((java.net.URI)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).toURI()).getRawAuthority());
        Assert.assertEquals("/home/bdanglot/workspace/Ex2amplifier-experiments/dataset/may-2018/protostuff/119/protostuff-parser/src/test/resources/enum_with_semicolon.proto", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getAbsoluteFile()).toString());
        Assert.assertFalse(((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getCanonicalFile()).canWrite());
        Assert.assertFalse(((io.protostuff.parser.Mutable)((io.protostuff.parser.Proto)proto).getMutableJavaPackageName()).isOverridden());
        Assert.assertTrue(((io.protostuff.parser.Proto)((io.protostuff.parser.Proto)proto).getProto()).getAnnotations().isEmpty());
        Assert.assertNull(((io.protostuff.parser.Mutable)((io.protostuff.parser.Proto)proto).getMutablePackageName()).getLast());
        Assert.assertEquals("src/test/resources", ((java.io.File)((java.io.File)((io.protostuff.parser.Proto)proto).getFile()).getParentFile()).getPath());
        Assert.assertTrue(o_testEnumWithTrailingSemicolon__3);
    }
}

